<?php
/**
 * ReportDefinition
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ReportDefinition Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;ReportDefinitionオブジェクトは、レポート定義を表します。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;The ReportDefinition object serves report definitions.&lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ReportDefinition implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ReportDefinition';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'account_id' => 'int',
        'complete_time' => 'string',
        'date_range' => '\OpenAPI\Client\Model\ReportDefinitionServiceDateRange',
        'date_range_type' => '\OpenAPI\Client\Model\ReportDefinitionServiceDateRangeType',
        'download_encode' => '\OpenAPI\Client\Model\ReportDefinitionServiceDownloadEncode',
        'download_format' => '\OpenAPI\Client\Model\ReportDefinitionServiceDownloadFormat',
        'fields' => 'string[]',
        'filters' => '\OpenAPI\Client\Model\ReportDefinitionServiceFilter[]',
        'frequency_range' => '\OpenAPI\Client\Model\ReportDefinitionServiceFrequencyRange',
        'job_status' => '\OpenAPI\Client\Model\ReportDefinitionServiceJobStatus',
        'lang' => '\OpenAPI\Client\Model\ReportDefinitionServiceLang',
        'report_job_error_detail' => 'string',
        'report_job_id' => 'int',
        'report_name' => 'string',
        'request_time' => 'string',
        'sort_fields' => '\OpenAPI\Client\Model\ReportDefinitionServiceReportSortField[]',
        'zip' => '\OpenAPI\Client\Model\ReportDefinitionServiceZip'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'account_id' => 'int64',
        'complete_time' => null,
        'date_range' => null,
        'date_range_type' => null,
        'download_encode' => null,
        'download_format' => null,
        'fields' => null,
        'filters' => null,
        'frequency_range' => null,
        'job_status' => null,
        'lang' => null,
        'report_job_error_detail' => null,
        'report_job_id' => 'int64',
        'report_name' => null,
        'request_time' => null,
        'sort_fields' => null,
        'zip' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'accountId',
        'complete_time' => 'completeTime',
        'date_range' => 'dateRange',
        'date_range_type' => 'dateRangeType',
        'download_encode' => 'downloadEncode',
        'download_format' => 'downloadFormat',
        'fields' => 'fields',
        'filters' => 'filters',
        'frequency_range' => 'frequencyRange',
        'job_status' => 'jobStatus',
        'lang' => 'lang',
        'report_job_error_detail' => 'reportJobErrorDetail',
        'report_job_id' => 'reportJobId',
        'report_name' => 'reportName',
        'request_time' => 'requestTime',
        'sort_fields' => 'sortFields',
        'zip' => 'zip'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'complete_time' => 'setCompleteTime',
        'date_range' => 'setDateRange',
        'date_range_type' => 'setDateRangeType',
        'download_encode' => 'setDownloadEncode',
        'download_format' => 'setDownloadFormat',
        'fields' => 'setFields',
        'filters' => 'setFilters',
        'frequency_range' => 'setFrequencyRange',
        'job_status' => 'setJobStatus',
        'lang' => 'setLang',
        'report_job_error_detail' => 'setReportJobErrorDetail',
        'report_job_id' => 'setReportJobId',
        'report_name' => 'setReportName',
        'request_time' => 'setRequestTime',
        'sort_fields' => 'setSortFields',
        'zip' => 'setZip'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'complete_time' => 'getCompleteTime',
        'date_range' => 'getDateRange',
        'date_range_type' => 'getDateRangeType',
        'download_encode' => 'getDownloadEncode',
        'download_format' => 'getDownloadFormat',
        'fields' => 'getFields',
        'filters' => 'getFilters',
        'frequency_range' => 'getFrequencyRange',
        'job_status' => 'getJobStatus',
        'lang' => 'getLang',
        'report_job_error_detail' => 'getReportJobErrorDetail',
        'report_job_id' => 'getReportJobId',
        'report_name' => 'getReportName',
        'request_time' => 'getRequestTime',
        'sort_fields' => 'getSortFields',
        'zip' => 'getZip'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['complete_time'] = isset($data['complete_time']) ? $data['complete_time'] : null;
        $this->container['date_range'] = isset($data['date_range']) ? $data['date_range'] : null;
        $this->container['date_range_type'] = isset($data['date_range_type']) ? $data['date_range_type'] : null;
        $this->container['download_encode'] = isset($data['download_encode']) ? $data['download_encode'] : null;
        $this->container['download_format'] = isset($data['download_format']) ? $data['download_format'] : null;
        $this->container['fields'] = isset($data['fields']) ? $data['fields'] : null;
        $this->container['filters'] = isset($data['filters']) ? $data['filters'] : null;
        $this->container['frequency_range'] = isset($data['frequency_range']) ? $data['frequency_range'] : null;
        $this->container['job_status'] = isset($data['job_status']) ? $data['job_status'] : null;
        $this->container['lang'] = isset($data['lang']) ? $data['lang'] : null;
        $this->container['report_job_error_detail'] = isset($data['report_job_error_detail']) ? $data['report_job_error_detail'] : null;
        $this->container['report_job_id'] = isset($data['report_job_id']) ? $data['report_job_id'] : null;
        $this->container['report_name'] = isset($data['report_name']) ? $data['report_name'] : null;
        $this->container['request_time'] = isset($data['request_time']) ? $data['request_time'] : null;
        $this->container['sort_fields'] = isset($data['sort_fields']) ? $data['sort_fields'] : null;
        $this->container['zip'] = isset($data['zip']) ? $data['zip'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int|null $account_id <div lang=\"ja\"> アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Account ID. <br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets complete_time
     *
     * @return string|null
     */
    public function getCompleteTime()
    {
        return $this->container['complete_time'];
    }

    /**
     * Sets complete_time
     *
     * @param string|null $complete_time <div lang=\"ja\"> ジョブ完了日時です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The date and time of Job completion. <br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setCompleteTime($complete_time)
    {
        $this->container['complete_time'] = $complete_time;

        return $this;
    }

    /**
     * Gets date_range
     *
     * @return \OpenAPI\Client\Model\ReportDefinitionServiceDateRange|null
     */
    public function getDateRange()
    {
        return $this->container['date_range'];
    }

    /**
     * Sets date_range
     *
     * @param \OpenAPI\Client\Model\ReportDefinitionServiceDateRange|null $date_range date_range
     *
     * @return $this
     */
    public function setDateRange($date_range)
    {
        $this->container['date_range'] = $date_range;

        return $this;
    }

    /**
     * Gets date_range_type
     *
     * @return \OpenAPI\Client\Model\ReportDefinitionServiceDateRangeType|null
     */
    public function getDateRangeType()
    {
        return $this->container['date_range_type'];
    }

    /**
     * Sets date_range_type
     *
     * @param \OpenAPI\Client\Model\ReportDefinitionServiceDateRangeType|null $date_range_type date_range_type
     *
     * @return $this
     */
    public function setDateRangeType($date_range_type)
    {
        $this->container['date_range_type'] = $date_range_type;

        return $this;
    }

    /**
     * Gets download_encode
     *
     * @return \OpenAPI\Client\Model\ReportDefinitionServiceDownloadEncode|null
     */
    public function getDownloadEncode()
    {
        return $this->container['download_encode'];
    }

    /**
     * Sets download_encode
     *
     * @param \OpenAPI\Client\Model\ReportDefinitionServiceDownloadEncode|null $download_encode download_encode
     *
     * @return $this
     */
    public function setDownloadEncode($download_encode)
    {
        $this->container['download_encode'] = $download_encode;

        return $this;
    }

    /**
     * Gets download_format
     *
     * @return \OpenAPI\Client\Model\ReportDefinitionServiceDownloadFormat|null
     */
    public function getDownloadFormat()
    {
        return $this->container['download_format'];
    }

    /**
     * Sets download_format
     *
     * @param \OpenAPI\Client\Model\ReportDefinitionServiceDownloadFormat|null $download_format download_format
     *
     * @return $this
     */
    public function setDownloadFormat($download_format)
    {
        $this->container['download_format'] = $download_format;

        return $this;
    }

    /**
     * Gets fields
     *
     * @return string[]|null
     */
    public function getFields()
    {
        return $this->container['fields'];
    }

    /**
     * Sets fields
     *
     * @param string[]|null $fields <div lang=\"ja\"> 表示項目です。<br> このフィールドは、ADD時に必須となり、REMOVE時に無視されます。<br> 指定可能な値は、ReportDefinitionServiceのgetReportFieldsで取得されるfieldNameをご確認ください。 </div> <div lang=\"en\"> Select the fields. <br> This field is required in ADD operation, and will be ignored in REMOVE operation.<br> * Available values can be referred to fieldName field of fields object obtained by getReportFields operation of ReportDefinitionService. </div>
     *
     * @return $this
     */
    public function setFields($fields)
    {
        $this->container['fields'] = $fields;

        return $this;
    }

    /**
     * Gets filters
     *
     * @return \OpenAPI\Client\Model\ReportDefinitionServiceFilter[]|null
     */
    public function getFilters()
    {
        return $this->container['filters'];
    }

    /**
     * Sets filters
     *
     * @param \OpenAPI\Client\Model\ReportDefinitionServiceFilter[]|null $filters filters
     *
     * @return $this
     */
    public function setFilters($filters)
    {
        $this->container['filters'] = $filters;

        return $this;
    }

    /**
     * Gets frequency_range
     *
     * @return \OpenAPI\Client\Model\ReportDefinitionServiceFrequencyRange|null
     */
    public function getFrequencyRange()
    {
        return $this->container['frequency_range'];
    }

    /**
     * Sets frequency_range
     *
     * @param \OpenAPI\Client\Model\ReportDefinitionServiceFrequencyRange|null $frequency_range frequency_range
     *
     * @return $this
     */
    public function setFrequencyRange($frequency_range)
    {
        $this->container['frequency_range'] = $frequency_range;

        return $this;
    }

    /**
     * Gets job_status
     *
     * @return \OpenAPI\Client\Model\ReportDefinitionServiceJobStatus|null
     */
    public function getJobStatus()
    {
        return $this->container['job_status'];
    }

    /**
     * Sets job_status
     *
     * @param \OpenAPI\Client\Model\ReportDefinitionServiceJobStatus|null $job_status job_status
     *
     * @return $this
     */
    public function setJobStatus($job_status)
    {
        $this->container['job_status'] = $job_status;

        return $this;
    }

    /**
     * Gets lang
     *
     * @return \OpenAPI\Client\Model\ReportDefinitionServiceLang|null
     */
    public function getLang()
    {
        return $this->container['lang'];
    }

    /**
     * Sets lang
     *
     * @param \OpenAPI\Client\Model\ReportDefinitionServiceLang|null $lang lang
     *
     * @return $this
     */
    public function setLang($lang)
    {
        $this->container['lang'] = $lang;

        return $this;
    }

    /**
     * Gets report_job_error_detail
     *
     * @return string|null
     */
    public function getReportJobErrorDetail()
    {
        return $this->container['report_job_error_detail'];
    }

    /**
     * Sets report_job_error_detail
     *
     * @param string|null $report_job_error_detail <div lang=\"ja\"> ジョブエラー詳細です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Job Error Detail. <br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setReportJobErrorDetail($report_job_error_detail)
    {
        $this->container['report_job_error_detail'] = $report_job_error_detail;

        return $this;
    }

    /**
     * Gets report_job_id
     *
     * @return int|null
     */
    public function getReportJobId()
    {
        return $this->container['report_job_id'];
    }

    /**
     * Sets report_job_id
     *
     * @param int|null $report_job_id <div lang=\"ja\"> レポートジョブIDです。<br> このフィールドは、REMOVE時に必須となり、ADD時に無視されます。 </div> <div lang=\"en\"> Report Job Id. <br> This field is required in REMOVE operation, and will be ignored in ADD operation. </div>
     *
     * @return $this
     */
    public function setReportJobId($report_job_id)
    {
        $this->container['report_job_id'] = $report_job_id;

        return $this;
    }

    /**
     * Gets report_name
     *
     * @return string|null
     */
    public function getReportName()
    {
        return $this->container['report_name'];
    }

    /**
     * Sets report_name
     *
     * @param string|null $report_name <div lang=\"ja\"> レポート名です。<br> このフィールドは、ADD時に省略可能となり、REMOVE時に無視されます。 </div> <div lang=\"en\"> Report name. <br> This field is optional in ADD operation, and will be ignored in REMOVE operation. </div>
     *
     * @return $this
     */
    public function setReportName($report_name)
    {
        $this->container['report_name'] = $report_name;

        return $this;
    }

    /**
     * Gets request_time
     *
     * @return string|null
     */
    public function getRequestTime()
    {
        return $this->container['request_time'];
    }

    /**
     * Sets request_time
     *
     * @param string|null $request_time <div lang=\"ja\"> ジョブ依頼日時です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The date and time of Job request. <br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setRequestTime($request_time)
    {
        $this->container['request_time'] = $request_time;

        return $this;
    }

    /**
     * Gets sort_fields
     *
     * @return \OpenAPI\Client\Model\ReportDefinitionServiceReportSortField[]|null
     */
    public function getSortFields()
    {
        return $this->container['sort_fields'];
    }

    /**
     * Sets sort_fields
     *
     * @param \OpenAPI\Client\Model\ReportDefinitionServiceReportSortField[]|null $sort_fields sort_fields
     *
     * @return $this
     */
    public function setSortFields($sort_fields)
    {
        $this->container['sort_fields'] = $sort_fields;

        return $this;
    }

    /**
     * Gets zip
     *
     * @return \OpenAPI\Client\Model\ReportDefinitionServiceZip|null
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     *
     * @param \OpenAPI\Client\Model\ReportDefinitionServiceZip|null $zip zip
     *
     * @return $this
     */
    public function setZip($zip)
    {
        $this->container['zip'] = $zip;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


