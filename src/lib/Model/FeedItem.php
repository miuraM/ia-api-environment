<?php
/**
 * FeedItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * FeedItem Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;FeedItemオブジェクトは、商品の情報を格納するコンテナです。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;FeedItem object contain information about the product.&lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FeedItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'FeedItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'availability' => '\OpenAPI\Client\Model\FeedItemServiceAvailability',
        'capacity' => 'int',
        'display_settings' => 'int',
        'feed_id' => 'int',
        'formatted_price' => 'string',
        'formatted_sale_price' => 'string',
        'in_stock' => 'int',
        'is_remove_capacity' => '\OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg',
        'is_remove_formatted_price' => '\OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg',
        'is_remove_formatted_sale_price' => '\OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg',
        'is_remove_price' => '\OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg',
        'is_remove_sale_price' => '\OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg',
        'item_id' => 'string',
        'price' => 'int',
        'sale_price' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'availability' => null,
        'capacity' => 'int64',
        'display_settings' => 'int64',
        'feed_id' => 'int64',
        'formatted_price' => null,
        'formatted_sale_price' => null,
        'in_stock' => 'int64',
        'is_remove_capacity' => null,
        'is_remove_formatted_price' => null,
        'is_remove_formatted_sale_price' => null,
        'is_remove_price' => null,
        'is_remove_sale_price' => null,
        'item_id' => null,
        'price' => 'int64',
        'sale_price' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'availability' => 'availability',
        'capacity' => 'capacity',
        'display_settings' => 'displaySettings',
        'feed_id' => 'feedId',
        'formatted_price' => 'formattedPrice',
        'formatted_sale_price' => 'formattedSalePrice',
        'in_stock' => 'inStock',
        'is_remove_capacity' => 'isRemoveCapacity',
        'is_remove_formatted_price' => 'isRemoveFormattedPrice',
        'is_remove_formatted_sale_price' => 'isRemoveFormattedSalePrice',
        'is_remove_price' => 'isRemovePrice',
        'is_remove_sale_price' => 'isRemoveSalePrice',
        'item_id' => 'itemId',
        'price' => 'price',
        'sale_price' => 'salePrice'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'availability' => 'setAvailability',
        'capacity' => 'setCapacity',
        'display_settings' => 'setDisplaySettings',
        'feed_id' => 'setFeedId',
        'formatted_price' => 'setFormattedPrice',
        'formatted_sale_price' => 'setFormattedSalePrice',
        'in_stock' => 'setInStock',
        'is_remove_capacity' => 'setIsRemoveCapacity',
        'is_remove_formatted_price' => 'setIsRemoveFormattedPrice',
        'is_remove_formatted_sale_price' => 'setIsRemoveFormattedSalePrice',
        'is_remove_price' => 'setIsRemovePrice',
        'is_remove_sale_price' => 'setIsRemoveSalePrice',
        'item_id' => 'setItemId',
        'price' => 'setPrice',
        'sale_price' => 'setSalePrice'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'availability' => 'getAvailability',
        'capacity' => 'getCapacity',
        'display_settings' => 'getDisplaySettings',
        'feed_id' => 'getFeedId',
        'formatted_price' => 'getFormattedPrice',
        'formatted_sale_price' => 'getFormattedSalePrice',
        'in_stock' => 'getInStock',
        'is_remove_capacity' => 'getIsRemoveCapacity',
        'is_remove_formatted_price' => 'getIsRemoveFormattedPrice',
        'is_remove_formatted_sale_price' => 'getIsRemoveFormattedSalePrice',
        'is_remove_price' => 'getIsRemovePrice',
        'is_remove_sale_price' => 'getIsRemoveSalePrice',
        'item_id' => 'getItemId',
        'price' => 'getPrice',
        'sale_price' => 'getSalePrice'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['availability'] = isset($data['availability']) ? $data['availability'] : null;
        $this->container['capacity'] = isset($data['capacity']) ? $data['capacity'] : null;
        $this->container['display_settings'] = isset($data['display_settings']) ? $data['display_settings'] : null;
        $this->container['feed_id'] = isset($data['feed_id']) ? $data['feed_id'] : null;
        $this->container['formatted_price'] = isset($data['formatted_price']) ? $data['formatted_price'] : null;
        $this->container['formatted_sale_price'] = isset($data['formatted_sale_price']) ? $data['formatted_sale_price'] : null;
        $this->container['in_stock'] = isset($data['in_stock']) ? $data['in_stock'] : null;
        $this->container['is_remove_capacity'] = isset($data['is_remove_capacity']) ? $data['is_remove_capacity'] : null;
        $this->container['is_remove_formatted_price'] = isset($data['is_remove_formatted_price']) ? $data['is_remove_formatted_price'] : null;
        $this->container['is_remove_formatted_sale_price'] = isset($data['is_remove_formatted_sale_price']) ? $data['is_remove_formatted_sale_price'] : null;
        $this->container['is_remove_price'] = isset($data['is_remove_price']) ? $data['is_remove_price'] : null;
        $this->container['is_remove_sale_price'] = isset($data['is_remove_sale_price']) ? $data['is_remove_sale_price'] : null;
        $this->container['item_id'] = isset($data['item_id']) ? $data['item_id'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['sale_price'] = isset($data['sale_price']) ? $data['sale_price'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets availability
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceAvailability|null
     */
    public function getAvailability()
    {
        return $this->container['availability'];
    }

    /**
     * Sets availability
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceAvailability|null $availability availability
     *
     * @return $this
     */
    public function setAvailability($availability)
    {
        $this->container['availability'] = $availability;

        return $this;
    }

    /**
     * Gets capacity
     *
     * @return int|null
     */
    public function getCapacity()
    {
        return $this->container['capacity'];
    }

    /**
     * Sets capacity
     *
     * @param int|null $capacity <div lang=\"ja\"> 在庫数です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Stock quantity.<br> This field is optional in requests. </div>
     *
     * @return $this
     */
    public function setCapacity($capacity)
    {
        $this->container['capacity'] = $capacity;

        return $this;
    }

    /**
     * Gets display_settings
     *
     * @return int|null
     */
    public function getDisplaySettings()
    {
        return $this->container['display_settings'];
    }

    /**
     * Sets display_settings
     *
     * @param int|null $display_settings <div lang=\"ja\"> 配信設定です。<br> このフィールドは、リクエストの場合は省略可能です。<br> ※「0:配信しない/1:配信する」を表します。 </div> <div lang=\"en\"> Display settings.<br> This field is optional in requests.<br> * 0: Off, 1: On. </div>
     *
     * @return $this
     */
    public function setDisplaySettings($display_settings)
    {
        $this->container['display_settings'] = $display_settings;

        return $this;
    }

    /**
     * Gets feed_id
     *
     * @return int|null
     */
    public function getFeedId()
    {
        return $this->container['feed_id'];
    }

    /**
     * Sets feed_id
     *
     * @param int|null $feed_id <div lang=\"ja\"> Feedを識別するIDです。<br> このフィールドは、リクエストの場合は必須です。 </div> <div lang=\"en\"> ID for identifying Feed.<br> This field is required in requests. </div>
     *
     * @return $this
     */
    public function setFeedId($feed_id)
    {
        $this->container['feed_id'] = $feed_id;

        return $this;
    }

    /**
     * Gets formatted_price
     *
     * @return string|null
     */
    public function getFormattedPrice()
    {
        return $this->container['formatted_price'];
    }

    /**
     * Sets formatted_price
     *
     * @param string|null $formatted_price <div lang=\"ja\"> 文字列の価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Text strings price.<br> This field is optional in requests. </div>
     *
     * @return $this
     */
    public function setFormattedPrice($formatted_price)
    {
        $this->container['formatted_price'] = $formatted_price;

        return $this;
    }

    /**
     * Gets formatted_sale_price
     *
     * @return string|null
     */
    public function getFormattedSalePrice()
    {
        return $this->container['formatted_sale_price'];
    }

    /**
     * Sets formatted_sale_price
     *
     * @param string|null $formatted_sale_price <div lang=\"ja\"> 文字列のセール価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Sale price of text strings.<br> This field is optional in requests. </div>
     *
     * @return $this
     */
    public function setFormattedSalePrice($formatted_sale_price)
    {
        $this->container['formatted_sale_price'] = $formatted_sale_price;

        return $this;
    }

    /**
     * Gets in_stock
     *
     * @return int|null
     */
    public function getInStock()
    {
        return $this->container['in_stock'];
    }

    /**
     * Sets in_stock
     *
     * @param int|null $in_stock <div lang=\"ja\"> 在庫情報です。<br> このフィールドは、リクエストの場合は省略可能です。<br> ※「0:在庫なし/1:在庫あり」を表します。 </div> <div lang=\"en\"> Inventory information.<br> This field is optional in requests.<br> 0: Out of stock, 1: In stock. </div>
     *
     * @return $this
     */
    public function setInStock($in_stock)
    {
        $this->container['in_stock'] = $in_stock;

        return $this;
    }

    /**
     * Gets is_remove_capacity
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg|null
     */
    public function getIsRemoveCapacity()
    {
        return $this->container['is_remove_capacity'];
    }

    /**
     * Sets is_remove_capacity
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg|null $is_remove_capacity is_remove_capacity
     *
     * @return $this
     */
    public function setIsRemoveCapacity($is_remove_capacity)
    {
        $this->container['is_remove_capacity'] = $is_remove_capacity;

        return $this;
    }

    /**
     * Gets is_remove_formatted_price
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg|null
     */
    public function getIsRemoveFormattedPrice()
    {
        return $this->container['is_remove_formatted_price'];
    }

    /**
     * Sets is_remove_formatted_price
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg|null $is_remove_formatted_price is_remove_formatted_price
     *
     * @return $this
     */
    public function setIsRemoveFormattedPrice($is_remove_formatted_price)
    {
        $this->container['is_remove_formatted_price'] = $is_remove_formatted_price;

        return $this;
    }

    /**
     * Gets is_remove_formatted_sale_price
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg|null
     */
    public function getIsRemoveFormattedSalePrice()
    {
        return $this->container['is_remove_formatted_sale_price'];
    }

    /**
     * Sets is_remove_formatted_sale_price
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg|null $is_remove_formatted_sale_price is_remove_formatted_sale_price
     *
     * @return $this
     */
    public function setIsRemoveFormattedSalePrice($is_remove_formatted_sale_price)
    {
        $this->container['is_remove_formatted_sale_price'] = $is_remove_formatted_sale_price;

        return $this;
    }

    /**
     * Gets is_remove_price
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg|null
     */
    public function getIsRemovePrice()
    {
        return $this->container['is_remove_price'];
    }

    /**
     * Sets is_remove_price
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg|null $is_remove_price is_remove_price
     *
     * @return $this
     */
    public function setIsRemovePrice($is_remove_price)
    {
        $this->container['is_remove_price'] = $is_remove_price;

        return $this;
    }

    /**
     * Gets is_remove_sale_price
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg|null
     */
    public function getIsRemoveSalePrice()
    {
        return $this->container['is_remove_sale_price'];
    }

    /**
     * Sets is_remove_sale_price
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceIsRemoveFlg|null $is_remove_sale_price is_remove_sale_price
     *
     * @return $this
     */
    public function setIsRemoveSalePrice($is_remove_sale_price)
    {
        $this->container['is_remove_sale_price'] = $is_remove_sale_price;

        return $this;
    }

    /**
     * Gets item_id
     *
     * @return string|null
     */
    public function getItemId()
    {
        return $this->container['item_id'];
    }

    /**
     * Sets item_id
     *
     * @param string|null $item_id <div lang=\"ja\"> 商品IDです。<br> このフィールドは、リクエストの場合は必須です。 </div> <div lang=\"en\"> Item ID.<br> This field is required in requests. </div>
     *
     * @return $this
     */
    public function setItemId($item_id)
    {
        $this->container['item_id'] = $item_id;

        return $this;
    }

    /**
     * Gets price
     *
     * @return int|null
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param int|null $price <div lang=\"ja\"> 価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Price.<br> This field is optional in requests. </div>
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets sale_price
     *
     * @return int|null
     */
    public function getSalePrice()
    {
        return $this->container['sale_price'];
    }

    /**
     * Sets sale_price
     *
     * @param int|null $sale_price <div lang=\"ja\"> セール価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Sale price.<br> This field is optional in requests. </div>
     *
     * @return $this
     */
    public function setSalePrice($sale_price)
    {
        $this->container['sale_price'] = $sale_price;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


