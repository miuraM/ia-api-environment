<?php
/**
 * Account
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Account Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;Accountオブジェクトは、アカウント情報を示します。&lt;br&gt; accountAuthoritiesで返却される値は、以下のとおりです。   &lt;table border&#x3D;&#39;1&#39;&gt;     &lt;tr&gt;       &lt;th&gt;accountAuthorities&lt;/th&gt;       &lt;th&gt;キャンペーン目的&lt;/th&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;WEBSITE_TRAFFIC&lt;/td&gt;       &lt;td&gt;サイト誘導&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;VIDEO_VIEW&lt;/td&gt;       &lt;td&gt;動画再生&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;APP_PROMOTION&lt;/td&gt;       &lt;td&gt;アプリ訴求&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;CONVERSION&lt;/td&gt;       &lt;td&gt;コンバージョン&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;ITEM_LIST&lt;/td&gt;       &lt;td&gt;商品リスト訴求&lt;/td&gt;     &lt;/tr&gt;   &lt;/table&gt; それぞれのキャンペーン目的の詳細については、&lt;a href&#x3D;\&quot;https://ads-help.yahoo.co.jp/yahooads/display/articledetail?lan&#x3D;ja&amp;aid&#x3D;51512\&quot;&gt;目的別キャンペーン作成について&lt;/a&gt;をご確認ください。 &lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;Account objects serve account information.&lt;br&gt; Responded values of &#x60;accountAuthorities&#x60; are as follows.   &lt;table border&#x3D;&#39;1&#39;&gt;     &lt;tr&gt;       &lt;th&gt;accountAuthorities&lt;/th&gt;       &lt;th&gt;campaign goal&lt;/th&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;WEBSITE_TRAFFIC&lt;/td&gt;       &lt;td&gt;Website traffic&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;VIDEO_VIEW&lt;/td&gt;       &lt;td&gt;Video view&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;APP_PROMOTION&lt;/td&gt;       &lt;td&gt;App promotion&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;CONVERSION&lt;/td&gt;       &lt;td&gt;Conversion&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;ITEM_LIST&lt;/td&gt;       &lt;td&gt;Item list promotion&lt;/td&gt;     &lt;/tr&gt;   &lt;/table&gt; Details of these campaign goal are described on &lt;a href&#x3D;\&quot;https://ads-help.yahoo.co.jp/yahooads/display/articledetail?lan&#x3D;ja&amp;aid&#x3D;51512\&quot;&gt;目的別キャンペーン作成について&lt;/a&gt; (Japanese context only). &lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class Account implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Account';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'account_authorities' => 'string[]',
        'account_id' => 'int',
        'account_name' => 'string',
        'account_status' => '\OpenAPI\Client\Model\AccountServiceStatus',
        'account_type' => '\OpenAPI\Client\Model\AccountServiceType',
        'auth_type' => '\OpenAPI\Client\Model\AccountServiceAuthType',
        'auto_tagging_enabled' => '\OpenAPI\Client\Model\AccountServiceAutoTaggingEnabled',
        'budget' => '\OpenAPI\Client\Model\AccountServiceBudget',
        'delivery_status' => '\OpenAPI\Client\Model\AccountServiceDeliveryStatus',
        'is_test_account' => '\OpenAPI\Client\Model\AccountServiceIsTestAccount'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'account_authorities' => null,
        'account_id' => 'int64',
        'account_name' => null,
        'account_status' => null,
        'account_type' => null,
        'auth_type' => null,
        'auto_tagging_enabled' => null,
        'budget' => null,
        'delivery_status' => null,
        'is_test_account' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_authorities' => 'accountAuthorities',
        'account_id' => 'accountId',
        'account_name' => 'accountName',
        'account_status' => 'accountStatus',
        'account_type' => 'accountType',
        'auth_type' => 'authType',
        'auto_tagging_enabled' => 'autoTaggingEnabled',
        'budget' => 'budget',
        'delivery_status' => 'deliveryStatus',
        'is_test_account' => 'isTestAccount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_authorities' => 'setAccountAuthorities',
        'account_id' => 'setAccountId',
        'account_name' => 'setAccountName',
        'account_status' => 'setAccountStatus',
        'account_type' => 'setAccountType',
        'auth_type' => 'setAuthType',
        'auto_tagging_enabled' => 'setAutoTaggingEnabled',
        'budget' => 'setBudget',
        'delivery_status' => 'setDeliveryStatus',
        'is_test_account' => 'setIsTestAccount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_authorities' => 'getAccountAuthorities',
        'account_id' => 'getAccountId',
        'account_name' => 'getAccountName',
        'account_status' => 'getAccountStatus',
        'account_type' => 'getAccountType',
        'auth_type' => 'getAuthType',
        'auto_tagging_enabled' => 'getAutoTaggingEnabled',
        'budget' => 'getBudget',
        'delivery_status' => 'getDeliveryStatus',
        'is_test_account' => 'getIsTestAccount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_authorities'] = isset($data['account_authorities']) ? $data['account_authorities'] : null;
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['account_name'] = isset($data['account_name']) ? $data['account_name'] : null;
        $this->container['account_status'] = isset($data['account_status']) ? $data['account_status'] : null;
        $this->container['account_type'] = isset($data['account_type']) ? $data['account_type'] : null;
        $this->container['auth_type'] = isset($data['auth_type']) ? $data['auth_type'] : null;
        $this->container['auto_tagging_enabled'] = isset($data['auto_tagging_enabled']) ? $data['auto_tagging_enabled'] : null;
        $this->container['budget'] = isset($data['budget']) ? $data['budget'] : null;
        $this->container['delivery_status'] = isset($data['delivery_status']) ? $data['delivery_status'] : null;
        $this->container['is_test_account'] = isset($data['is_test_account']) ? $data['is_test_account'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_authorities
     *
     * @return string[]|null
     */
    public function getAccountAuthorities()
    {
        return $this->container['account_authorities'];
    }

    /**
     * Sets account_authorities
     *
     * @param string[]|null $account_authorities <div lang=\"ja\">アカウント権限です。</div> <div lang=\"en\">Account authority.</div>
     *
     * @return $this
     */
    public function setAccountAuthorities($account_authorities)
    {
        $this->container['account_authorities'] = $account_authorities;

        return $this;
    }

    /**
     * Gets account_id
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int|null $account_id <div lang=\"ja\"> アカウントIDです。<br> SET時、このフィールドは必須となります。 </div> <div lang=\"en\"> Account ID.<br> This field is required in SET operation. </div>
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets account_name
     *
     * @return string|null
     */
    public function getAccountName()
    {
        return $this->container['account_name'];
    }

    /**
     * Sets account_name
     *
     * @param string|null $account_name <div lang=\"ja\"> アカウント名です。<br> SET時、このフィールドは省略可能となります。 </div> <div lang=\"en\"> Account name.<br> This field is optional in SET operation. </div>
     *
     * @return $this
     */
    public function setAccountName($account_name)
    {
        $this->container['account_name'] = $account_name;

        return $this;
    }

    /**
     * Gets account_status
     *
     * @return \OpenAPI\Client\Model\AccountServiceStatus|null
     */
    public function getAccountStatus()
    {
        return $this->container['account_status'];
    }

    /**
     * Sets account_status
     *
     * @param \OpenAPI\Client\Model\AccountServiceStatus|null $account_status account_status
     *
     * @return $this
     */
    public function setAccountStatus($account_status)
    {
        $this->container['account_status'] = $account_status;

        return $this;
    }

    /**
     * Gets account_type
     *
     * @return \OpenAPI\Client\Model\AccountServiceType|null
     */
    public function getAccountType()
    {
        return $this->container['account_type'];
    }

    /**
     * Sets account_type
     *
     * @param \OpenAPI\Client\Model\AccountServiceType|null $account_type account_type
     *
     * @return $this
     */
    public function setAccountType($account_type)
    {
        $this->container['account_type'] = $account_type;

        return $this;
    }

    /**
     * Gets auth_type
     *
     * @return \OpenAPI\Client\Model\AccountServiceAuthType|null
     */
    public function getAuthType()
    {
        return $this->container['auth_type'];
    }

    /**
     * Sets auth_type
     *
     * @param \OpenAPI\Client\Model\AccountServiceAuthType|null $auth_type auth_type
     *
     * @return $this
     */
    public function setAuthType($auth_type)
    {
        $this->container['auth_type'] = $auth_type;

        return $this;
    }

    /**
     * Gets auto_tagging_enabled
     *
     * @return \OpenAPI\Client\Model\AccountServiceAutoTaggingEnabled|null
     */
    public function getAutoTaggingEnabled()
    {
        return $this->container['auto_tagging_enabled'];
    }

    /**
     * Sets auto_tagging_enabled
     *
     * @param \OpenAPI\Client\Model\AccountServiceAutoTaggingEnabled|null $auto_tagging_enabled auto_tagging_enabled
     *
     * @return $this
     */
    public function setAutoTaggingEnabled($auto_tagging_enabled)
    {
        $this->container['auto_tagging_enabled'] = $auto_tagging_enabled;

        return $this;
    }

    /**
     * Gets budget
     *
     * @return \OpenAPI\Client\Model\AccountServiceBudget|null
     */
    public function getBudget()
    {
        return $this->container['budget'];
    }

    /**
     * Sets budget
     *
     * @param \OpenAPI\Client\Model\AccountServiceBudget|null $budget budget
     *
     * @return $this
     */
    public function setBudget($budget)
    {
        $this->container['budget'] = $budget;

        return $this;
    }

    /**
     * Gets delivery_status
     *
     * @return \OpenAPI\Client\Model\AccountServiceDeliveryStatus|null
     */
    public function getDeliveryStatus()
    {
        return $this->container['delivery_status'];
    }

    /**
     * Sets delivery_status
     *
     * @param \OpenAPI\Client\Model\AccountServiceDeliveryStatus|null $delivery_status delivery_status
     *
     * @return $this
     */
    public function setDeliveryStatus($delivery_status)
    {
        $this->container['delivery_status'] = $delivery_status;

        return $this;
    }

    /**
     * Gets is_test_account
     *
     * @return \OpenAPI\Client\Model\AccountServiceIsTestAccount|null
     */
    public function getIsTestAccount()
    {
        return $this->container['is_test_account'];
    }

    /**
     * Sets is_test_account
     *
     * @param \OpenAPI\Client\Model\AccountServiceIsTestAccount|null $is_test_account is_test_account
     *
     * @return $this
     */
    public function setIsTestAccount($is_test_account)
    {
        $this->container['is_test_account'] = $is_test_account;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


