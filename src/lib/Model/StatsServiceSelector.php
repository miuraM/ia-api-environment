<?php
/**
 * StatsServiceSelector
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * StatsServiceSelector Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;StatsServiceSelectorオブジェクトは、getメソッドの検索条件（実行パラメータ）を保持します。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;StatsServiceSelector object is a container that includes the search conditions (execution parameters) of get methods.&lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class StatsServiceSelector implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'StatsServiceSelector';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'account_id' => 'int',
        'campaign_ids' => 'int[]',
        'ad_group_ids' => 'int[]',
        'ad_ids' => 'int[]',
        'media_ids' => 'int[]',
        'stats_period' => '\OpenAPI\Client\Model\StatsServiceStatsPeriod',
        'period_custom_date' => '\OpenAPI\Client\Model\StatsServicePeriodCustomDate',
        'target_types' => '\OpenAPI\Client\Model\StatsServiceTargetType[]',
        'type' => '\OpenAPI\Client\Model\StatsServiceType',
        'start_index' => 'int',
        'number_results' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'account_id' => 'int64',
        'campaign_ids' => 'int64',
        'ad_group_ids' => 'int64',
        'ad_ids' => 'int64',
        'media_ids' => 'int64',
        'stats_period' => null,
        'period_custom_date' => null,
        'target_types' => null,
        'type' => null,
        'start_index' => 'int32',
        'number_results' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'accountId',
        'campaign_ids' => 'campaignIds',
        'ad_group_ids' => 'adGroupIds',
        'ad_ids' => 'adIds',
        'media_ids' => 'mediaIds',
        'stats_period' => 'statsPeriod',
        'period_custom_date' => 'periodCustomDate',
        'target_types' => 'targetTypes',
        'type' => 'type',
        'start_index' => 'startIndex',
        'number_results' => 'numberResults'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'campaign_ids' => 'setCampaignIds',
        'ad_group_ids' => 'setAdGroupIds',
        'ad_ids' => 'setAdIds',
        'media_ids' => 'setMediaIds',
        'stats_period' => 'setStatsPeriod',
        'period_custom_date' => 'setPeriodCustomDate',
        'target_types' => 'setTargetTypes',
        'type' => 'setType',
        'start_index' => 'setStartIndex',
        'number_results' => 'setNumberResults'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'campaign_ids' => 'getCampaignIds',
        'ad_group_ids' => 'getAdGroupIds',
        'ad_ids' => 'getAdIds',
        'media_ids' => 'getMediaIds',
        'stats_period' => 'getStatsPeriod',
        'period_custom_date' => 'getPeriodCustomDate',
        'target_types' => 'getTargetTypes',
        'type' => 'getType',
        'start_index' => 'getStartIndex',
        'number_results' => 'getNumberResults'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['campaign_ids'] = isset($data['campaign_ids']) ? $data['campaign_ids'] : null;
        $this->container['ad_group_ids'] = isset($data['ad_group_ids']) ? $data['ad_group_ids'] : null;
        $this->container['ad_ids'] = isset($data['ad_ids']) ? $data['ad_ids'] : null;
        $this->container['media_ids'] = isset($data['media_ids']) ? $data['media_ids'] : null;
        $this->container['stats_period'] = isset($data['stats_period']) ? $data['stats_period'] : null;
        $this->container['period_custom_date'] = isset($data['period_custom_date']) ? $data['period_custom_date'] : null;
        $this->container['target_types'] = isset($data['target_types']) ? $data['target_types'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['start_index'] = isset($data['start_index']) ? $data['start_index'] : 1;
        $this->container['number_results'] = isset($data['number_results']) ? $data['number_results'] : 500;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['account_id'] === null) {
            $invalidProperties[] = "'account_id' can't be null";
        }
        if (!is_null($this->container['start_index']) && ($this->container['start_index'] < 1)) {
            $invalidProperties[] = "invalid value for 'start_index', must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['number_results']) && ($this->container['number_results'] > 500)) {
            $invalidProperties[] = "invalid value for 'number_results', must be smaller than or equal to 500.";
        }

        if (!is_null($this->container['number_results']) && ($this->container['number_results'] < 1)) {
            $invalidProperties[] = "invalid value for 'number_results', must be bigger than or equal to 1.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return int
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int $account_id <div lang=\"ja\">アカウントID</div> <div lang=\"en\">Account ID.</div>
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets campaign_ids
     *
     * @return int[]|null
     */
    public function getCampaignIds()
    {
        return $this->container['campaign_ids'];
    }

    /**
     * Sets campaign_ids
     *
     * @param int[]|null $campaign_ids <div lang=\"ja\"> キャンペーンID<br> typeで「CAMPAIGN」または「ADGROUP」または「AD」または「TARGET」を指定した場合のみ有効です。 </div> <div lang=\"en\"> Campaign ID.<br> Available only when &#34;CAMPAIGN&#34; or &#34;ADGROUP&#34; or &#34;AD&#34; or &#34;TARGET&#34; is specified for type. </div>
     *
     * @return $this
     */
    public function setCampaignIds($campaign_ids)
    {
        $this->container['campaign_ids'] = $campaign_ids;

        return $this;
    }

    /**
     * Gets ad_group_ids
     *
     * @return int[]|null
     */
    public function getAdGroupIds()
    {
        return $this->container['ad_group_ids'];
    }

    /**
     * Sets ad_group_ids
     *
     * @param int[]|null $ad_group_ids <div lang=\"ja\"> 広告グループID<br> typeで「ADGROUP」または「AD」または「TARGET」を指定した場合のみ有効です。 </div> <div lang=\"en\"> Ad group ID.<br> Available only when &#34;ADGROUP&#34; or &#34;AD&#34; or &#34;TARGET&#34; is specified for type. </div>
     *
     * @return $this
     */
    public function setAdGroupIds($ad_group_ids)
    {
        $this->container['ad_group_ids'] = $ad_group_ids;

        return $this;
    }

    /**
     * Gets ad_ids
     *
     * @return int[]|null
     */
    public function getAdIds()
    {
        return $this->container['ad_ids'];
    }

    /**
     * Sets ad_ids
     *
     * @param int[]|null $ad_ids <div lang=\"ja\"> 広告ID<br> typeで「AD」を指定した場合のみ有効です。 </div> <div lang=\"en\"> Ad ID.<br> Available only when &#34;AD&#34; is specified for type. </div>
     *
     * @return $this
     */
    public function setAdIds($ad_ids)
    {
        $this->container['ad_ids'] = $ad_ids;

        return $this;
    }

    /**
     * Gets media_ids
     *
     * @return int[]|null
     */
    public function getMediaIds()
    {
        return $this->container['media_ids'];
    }

    /**
     * Sets media_ids
     *
     * @param int[]|null $media_ids <div lang=\"ja\"> 画像ID<br> typeで「MEDIA」を指定した場合のみ有効です。 </div> <div lang=\"en\"> Media ID.<br> Available only when &#34;MEDIA&#34; is specified for type. </div>
     *
     * @return $this
     */
    public function setMediaIds($media_ids)
    {
        $this->container['media_ids'] = $media_ids;

        return $this;
    }

    /**
     * Gets stats_period
     *
     * @return \OpenAPI\Client\Model\StatsServiceStatsPeriod|null
     */
    public function getStatsPeriod()
    {
        return $this->container['stats_period'];
    }

    /**
     * Sets stats_period
     *
     * @param \OpenAPI\Client\Model\StatsServiceStatsPeriod|null $stats_period stats_period
     *
     * @return $this
     */
    public function setStatsPeriod($stats_period)
    {
        $this->container['stats_period'] = $stats_period;

        return $this;
    }

    /**
     * Gets period_custom_date
     *
     * @return \OpenAPI\Client\Model\StatsServicePeriodCustomDate|null
     */
    public function getPeriodCustomDate()
    {
        return $this->container['period_custom_date'];
    }

    /**
     * Sets period_custom_date
     *
     * @param \OpenAPI\Client\Model\StatsServicePeriodCustomDate|null $period_custom_date period_custom_date
     *
     * @return $this
     */
    public function setPeriodCustomDate($period_custom_date)
    {
        $this->container['period_custom_date'] = $period_custom_date;

        return $this;
    }

    /**
     * Gets target_types
     *
     * @return \OpenAPI\Client\Model\StatsServiceTargetType[]|null
     */
    public function getTargetTypes()
    {
        return $this->container['target_types'];
    }

    /**
     * Sets target_types
     *
     * @param \OpenAPI\Client\Model\StatsServiceTargetType[]|null $target_types target_types
     *
     * @return $this
     */
    public function setTargetTypes($target_types)
    {
        $this->container['target_types'] = $target_types;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \OpenAPI\Client\Model\StatsServiceType|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \OpenAPI\Client\Model\StatsServiceType|null $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets start_index
     *
     * @return int|null
     */
    public function getStartIndex()
    {
        return $this->container['start_index'];
    }

    /**
     * Sets start_index
     *
     * @param int|null $start_index <div lang=\"ja\">ページの先頭のインデックスです。このフィールドは、1以上を指定する必要があります。</div> <div lang=\"en\">Index of the first result to return in this page. This field must be greater than or equal to 1.</div>
     *
     * @return $this
     */
    public function setStartIndex($start_index)
    {

        if (!is_null($start_index) && ($start_index < 1)) {
            throw new \InvalidArgumentException('invalid value for $start_index when calling StatsServiceSelector., must be bigger than or equal to 1.');
        }

        $this->container['start_index'] = $start_index;

        return $this;
    }

    /**
     * Gets number_results
     *
     * @return int|null
     */
    public function getNumberResults()
    {
        return $this->container['number_results'];
    }

    /**
     * Sets number_results
     *
     * @param int|null $number_results <div lang=\"ja\">ページの最大件数です。このフィールドは、1以上を指定する必要があります。</div> <div lang=\"en\">Maximum number of results to return in this page. This field must be greater than or equal to 1. Also see Entity Limits per operation.</div>
     *
     * @return $this
     */
    public function setNumberResults($number_results)
    {

        if (!is_null($number_results) && ($number_results > 500)) {
            throw new \InvalidArgumentException('invalid value for $number_results when calling StatsServiceSelector., must be smaller than or equal to 500.');
        }
        if (!is_null($number_results) && ($number_results < 1)) {
            throw new \InvalidArgumentException('invalid value for $number_results when calling StatsServiceSelector., must be bigger than or equal to 1.');
        }

        $this->container['number_results'] = $number_results;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


