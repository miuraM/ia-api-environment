<?php
/**
 * Stats
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Stats Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;Statsオブジェクトは、統計情報を保持します。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;Stats object contains the stats information.&lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class Stats implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Stats';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'imps' => 'int',
        'imps_prev' => 'double',
        'click_cnt' => 'int',
        'click_rate' => 'double',
        'click_rate_prev' => 'double',
        'cost' => 'double',
        'avg_cpc' => 'double',
        'conversions' => 'int',
        'conversion_rate' => 'double',
        'conversions_via_ad_click' => 'int',
        'conversion_rate_via_ad_click' => 'double',
        'all_conversions' => 'int',
        'all_conversion_rate' => 'double',
        'cpa' => 'string',
        'conversion_value' => 'string',
        'value_per_conversions' => 'string',
        'conv_value_per_cost' => 'double',
        'all_conv_value_per_cost' => 'double',
        'conv_value_via_ad_click_per_cost' => 'double',
        'all_conversion_value' => 'string',
        'value_per_all_conversions' => 'string',
        'conversion_value_via_ad_click' => 'string',
        'value_per_conversions_via_ad_click' => 'string',
        'cpa_via_ad_click' => 'string',
        'all_cpa' => 'string',
        'cross_device_conversions' => 'int',
        'avg_deliver_rank' => 'double',
        'measured_imps' => 'double',
        'total_vimps' => 'int',
        'measured_imps_rate' => 'double',
        'vimps' => 'int',
        'viewable_imps_rate' => 'double',
        'in_view_rate' => 'double',
        'viewable_clicks' => 'double',
        'in_view_click_cnt' => 'int',
        'viewable_click_rate' => 'double',
        'in_view_click_rate' => 'double',
        'paid_video_views' => 'int',
        'paid_video_view_rate' => 'double',
        'average_cpv' => 'double',
        'video_views' => 'int',
        'video_views_to25' => 'int',
        'video_views_to50' => 'int',
        'video_views_to75' => 'int',
        'video_views_to95' => 'int',
        'video_views_to100' => 'int',
        'video_views_to3_sec' => 'int',
        'video_views_to10_sec' => 'int',
        'average_rate_video_viewed' => 'double',
        'average_duration_video_viewed' => 'double',
        'impression_share' => 'double',
        'budget_impression_share_lost_rate' => 'double',
        'rank_impression_share_lost_rate' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'imps' => 'int64',
        'imps_prev' => 'double',
        'click_cnt' => 'int64',
        'click_rate' => 'double',
        'click_rate_prev' => 'double',
        'cost' => 'double',
        'avg_cpc' => 'double',
        'conversions' => 'int64',
        'conversion_rate' => 'double',
        'conversions_via_ad_click' => 'int64',
        'conversion_rate_via_ad_click' => 'double',
        'all_conversions' => 'int64',
        'all_conversion_rate' => 'double',
        'cpa' => null,
        'conversion_value' => null,
        'value_per_conversions' => null,
        'conv_value_per_cost' => 'double',
        'all_conv_value_per_cost' => 'double',
        'conv_value_via_ad_click_per_cost' => 'double',
        'all_conversion_value' => null,
        'value_per_all_conversions' => null,
        'conversion_value_via_ad_click' => null,
        'value_per_conversions_via_ad_click' => null,
        'cpa_via_ad_click' => null,
        'all_cpa' => null,
        'cross_device_conversions' => 'int64',
        'avg_deliver_rank' => 'double',
        'measured_imps' => 'double',
        'total_vimps' => 'int64',
        'measured_imps_rate' => 'double',
        'vimps' => 'int64',
        'viewable_imps_rate' => 'double',
        'in_view_rate' => 'double',
        'viewable_clicks' => 'double',
        'in_view_click_cnt' => 'int64',
        'viewable_click_rate' => 'double',
        'in_view_click_rate' => 'double',
        'paid_video_views' => 'int64',
        'paid_video_view_rate' => 'double',
        'average_cpv' => 'double',
        'video_views' => 'int64',
        'video_views_to25' => 'int64',
        'video_views_to50' => 'int64',
        'video_views_to75' => 'int64',
        'video_views_to95' => 'int64',
        'video_views_to100' => 'int64',
        'video_views_to3_sec' => 'int64',
        'video_views_to10_sec' => 'int64',
        'average_rate_video_viewed' => 'double',
        'average_duration_video_viewed' => 'double',
        'impression_share' => 'double',
        'budget_impression_share_lost_rate' => 'double',
        'rank_impression_share_lost_rate' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'imps' => 'imps',
        'imps_prev' => 'impsPrev',
        'click_cnt' => 'clickCnt',
        'click_rate' => 'clickRate',
        'click_rate_prev' => 'clickRatePrev',
        'cost' => 'cost',
        'avg_cpc' => 'avgCpc',
        'conversions' => 'conversions',
        'conversion_rate' => 'conversionRate',
        'conversions_via_ad_click' => 'conversionsViaAdClick',
        'conversion_rate_via_ad_click' => 'conversionRateViaAdClick',
        'all_conversions' => 'allConversions',
        'all_conversion_rate' => 'allConversionRate',
        'cpa' => 'cpa',
        'conversion_value' => 'conversionValue',
        'value_per_conversions' => 'valuePerConversions',
        'conv_value_per_cost' => 'convValuePerCost',
        'all_conv_value_per_cost' => 'allConvValuePerCost',
        'conv_value_via_ad_click_per_cost' => 'convValueViaAdClickPerCost',
        'all_conversion_value' => 'allConversionValue',
        'value_per_all_conversions' => 'valuePerAllConversions',
        'conversion_value_via_ad_click' => 'conversionValueViaAdClick',
        'value_per_conversions_via_ad_click' => 'valuePerConversionsViaAdClick',
        'cpa_via_ad_click' => 'cpaViaAdClick',
        'all_cpa' => 'allCpa',
        'cross_device_conversions' => 'crossDeviceConversions',
        'avg_deliver_rank' => 'avgDeliverRank',
        'measured_imps' => 'measuredImps',
        'total_vimps' => 'totalVimps',
        'measured_imps_rate' => 'measuredImpsRate',
        'vimps' => 'vimps',
        'viewable_imps_rate' => 'viewableImpsRate',
        'in_view_rate' => 'inViewRate',
        'viewable_clicks' => 'viewableClicks',
        'in_view_click_cnt' => 'inViewClickCnt',
        'viewable_click_rate' => 'viewableClickRate',
        'in_view_click_rate' => 'inViewClickRate',
        'paid_video_views' => 'paidVideoViews',
        'paid_video_view_rate' => 'paidVideoViewRate',
        'average_cpv' => 'averageCpv',
        'video_views' => 'videoViews',
        'video_views_to25' => 'videoViewsTo25',
        'video_views_to50' => 'videoViewsTo50',
        'video_views_to75' => 'videoViewsTo75',
        'video_views_to95' => 'videoViewsTo95',
        'video_views_to100' => 'videoViewsTo100',
        'video_views_to3_sec' => 'videoViewsTo3Sec',
        'video_views_to10_sec' => 'videoViewsTo10Sec',
        'average_rate_video_viewed' => 'averageRateVideoViewed',
        'average_duration_video_viewed' => 'averageDurationVideoViewed',
        'impression_share' => 'impressionShare',
        'budget_impression_share_lost_rate' => 'budgetImpressionShareLostRate',
        'rank_impression_share_lost_rate' => 'rankImpressionShareLostRate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'imps' => 'setImps',
        'imps_prev' => 'setImpsPrev',
        'click_cnt' => 'setClickCnt',
        'click_rate' => 'setClickRate',
        'click_rate_prev' => 'setClickRatePrev',
        'cost' => 'setCost',
        'avg_cpc' => 'setAvgCpc',
        'conversions' => 'setConversions',
        'conversion_rate' => 'setConversionRate',
        'conversions_via_ad_click' => 'setConversionsViaAdClick',
        'conversion_rate_via_ad_click' => 'setConversionRateViaAdClick',
        'all_conversions' => 'setAllConversions',
        'all_conversion_rate' => 'setAllConversionRate',
        'cpa' => 'setCpa',
        'conversion_value' => 'setConversionValue',
        'value_per_conversions' => 'setValuePerConversions',
        'conv_value_per_cost' => 'setConvValuePerCost',
        'all_conv_value_per_cost' => 'setAllConvValuePerCost',
        'conv_value_via_ad_click_per_cost' => 'setConvValueViaAdClickPerCost',
        'all_conversion_value' => 'setAllConversionValue',
        'value_per_all_conversions' => 'setValuePerAllConversions',
        'conversion_value_via_ad_click' => 'setConversionValueViaAdClick',
        'value_per_conversions_via_ad_click' => 'setValuePerConversionsViaAdClick',
        'cpa_via_ad_click' => 'setCpaViaAdClick',
        'all_cpa' => 'setAllCpa',
        'cross_device_conversions' => 'setCrossDeviceConversions',
        'avg_deliver_rank' => 'setAvgDeliverRank',
        'measured_imps' => 'setMeasuredImps',
        'total_vimps' => 'setTotalVimps',
        'measured_imps_rate' => 'setMeasuredImpsRate',
        'vimps' => 'setVimps',
        'viewable_imps_rate' => 'setViewableImpsRate',
        'in_view_rate' => 'setInViewRate',
        'viewable_clicks' => 'setViewableClicks',
        'in_view_click_cnt' => 'setInViewClickCnt',
        'viewable_click_rate' => 'setViewableClickRate',
        'in_view_click_rate' => 'setInViewClickRate',
        'paid_video_views' => 'setPaidVideoViews',
        'paid_video_view_rate' => 'setPaidVideoViewRate',
        'average_cpv' => 'setAverageCpv',
        'video_views' => 'setVideoViews',
        'video_views_to25' => 'setVideoViewsTo25',
        'video_views_to50' => 'setVideoViewsTo50',
        'video_views_to75' => 'setVideoViewsTo75',
        'video_views_to95' => 'setVideoViewsTo95',
        'video_views_to100' => 'setVideoViewsTo100',
        'video_views_to3_sec' => 'setVideoViewsTo3Sec',
        'video_views_to10_sec' => 'setVideoViewsTo10Sec',
        'average_rate_video_viewed' => 'setAverageRateVideoViewed',
        'average_duration_video_viewed' => 'setAverageDurationVideoViewed',
        'impression_share' => 'setImpressionShare',
        'budget_impression_share_lost_rate' => 'setBudgetImpressionShareLostRate',
        'rank_impression_share_lost_rate' => 'setRankImpressionShareLostRate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'imps' => 'getImps',
        'imps_prev' => 'getImpsPrev',
        'click_cnt' => 'getClickCnt',
        'click_rate' => 'getClickRate',
        'click_rate_prev' => 'getClickRatePrev',
        'cost' => 'getCost',
        'avg_cpc' => 'getAvgCpc',
        'conversions' => 'getConversions',
        'conversion_rate' => 'getConversionRate',
        'conversions_via_ad_click' => 'getConversionsViaAdClick',
        'conversion_rate_via_ad_click' => 'getConversionRateViaAdClick',
        'all_conversions' => 'getAllConversions',
        'all_conversion_rate' => 'getAllConversionRate',
        'cpa' => 'getCpa',
        'conversion_value' => 'getConversionValue',
        'value_per_conversions' => 'getValuePerConversions',
        'conv_value_per_cost' => 'getConvValuePerCost',
        'all_conv_value_per_cost' => 'getAllConvValuePerCost',
        'conv_value_via_ad_click_per_cost' => 'getConvValueViaAdClickPerCost',
        'all_conversion_value' => 'getAllConversionValue',
        'value_per_all_conversions' => 'getValuePerAllConversions',
        'conversion_value_via_ad_click' => 'getConversionValueViaAdClick',
        'value_per_conversions_via_ad_click' => 'getValuePerConversionsViaAdClick',
        'cpa_via_ad_click' => 'getCpaViaAdClick',
        'all_cpa' => 'getAllCpa',
        'cross_device_conversions' => 'getCrossDeviceConversions',
        'avg_deliver_rank' => 'getAvgDeliverRank',
        'measured_imps' => 'getMeasuredImps',
        'total_vimps' => 'getTotalVimps',
        'measured_imps_rate' => 'getMeasuredImpsRate',
        'vimps' => 'getVimps',
        'viewable_imps_rate' => 'getViewableImpsRate',
        'in_view_rate' => 'getInViewRate',
        'viewable_clicks' => 'getViewableClicks',
        'in_view_click_cnt' => 'getInViewClickCnt',
        'viewable_click_rate' => 'getViewableClickRate',
        'in_view_click_rate' => 'getInViewClickRate',
        'paid_video_views' => 'getPaidVideoViews',
        'paid_video_view_rate' => 'getPaidVideoViewRate',
        'average_cpv' => 'getAverageCpv',
        'video_views' => 'getVideoViews',
        'video_views_to25' => 'getVideoViewsTo25',
        'video_views_to50' => 'getVideoViewsTo50',
        'video_views_to75' => 'getVideoViewsTo75',
        'video_views_to95' => 'getVideoViewsTo95',
        'video_views_to100' => 'getVideoViewsTo100',
        'video_views_to3_sec' => 'getVideoViewsTo3Sec',
        'video_views_to10_sec' => 'getVideoViewsTo10Sec',
        'average_rate_video_viewed' => 'getAverageRateVideoViewed',
        'average_duration_video_viewed' => 'getAverageDurationVideoViewed',
        'impression_share' => 'getImpressionShare',
        'budget_impression_share_lost_rate' => 'getBudgetImpressionShareLostRate',
        'rank_impression_share_lost_rate' => 'getRankImpressionShareLostRate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['imps'] = isset($data['imps']) ? $data['imps'] : null;
        $this->container['imps_prev'] = isset($data['imps_prev']) ? $data['imps_prev'] : null;
        $this->container['click_cnt'] = isset($data['click_cnt']) ? $data['click_cnt'] : null;
        $this->container['click_rate'] = isset($data['click_rate']) ? $data['click_rate'] : null;
        $this->container['click_rate_prev'] = isset($data['click_rate_prev']) ? $data['click_rate_prev'] : null;
        $this->container['cost'] = isset($data['cost']) ? $data['cost'] : null;
        $this->container['avg_cpc'] = isset($data['avg_cpc']) ? $data['avg_cpc'] : null;
        $this->container['conversions'] = isset($data['conversions']) ? $data['conversions'] : null;
        $this->container['conversion_rate'] = isset($data['conversion_rate']) ? $data['conversion_rate'] : null;
        $this->container['conversions_via_ad_click'] = isset($data['conversions_via_ad_click']) ? $data['conversions_via_ad_click'] : null;
        $this->container['conversion_rate_via_ad_click'] = isset($data['conversion_rate_via_ad_click']) ? $data['conversion_rate_via_ad_click'] : null;
        $this->container['all_conversions'] = isset($data['all_conversions']) ? $data['all_conversions'] : null;
        $this->container['all_conversion_rate'] = isset($data['all_conversion_rate']) ? $data['all_conversion_rate'] : null;
        $this->container['cpa'] = isset($data['cpa']) ? $data['cpa'] : null;
        $this->container['conversion_value'] = isset($data['conversion_value']) ? $data['conversion_value'] : null;
        $this->container['value_per_conversions'] = isset($data['value_per_conversions']) ? $data['value_per_conversions'] : null;
        $this->container['conv_value_per_cost'] = isset($data['conv_value_per_cost']) ? $data['conv_value_per_cost'] : null;
        $this->container['all_conv_value_per_cost'] = isset($data['all_conv_value_per_cost']) ? $data['all_conv_value_per_cost'] : null;
        $this->container['conv_value_via_ad_click_per_cost'] = isset($data['conv_value_via_ad_click_per_cost']) ? $data['conv_value_via_ad_click_per_cost'] : null;
        $this->container['all_conversion_value'] = isset($data['all_conversion_value']) ? $data['all_conversion_value'] : null;
        $this->container['value_per_all_conversions'] = isset($data['value_per_all_conversions']) ? $data['value_per_all_conversions'] : null;
        $this->container['conversion_value_via_ad_click'] = isset($data['conversion_value_via_ad_click']) ? $data['conversion_value_via_ad_click'] : null;
        $this->container['value_per_conversions_via_ad_click'] = isset($data['value_per_conversions_via_ad_click']) ? $data['value_per_conversions_via_ad_click'] : null;
        $this->container['cpa_via_ad_click'] = isset($data['cpa_via_ad_click']) ? $data['cpa_via_ad_click'] : null;
        $this->container['all_cpa'] = isset($data['all_cpa']) ? $data['all_cpa'] : null;
        $this->container['cross_device_conversions'] = isset($data['cross_device_conversions']) ? $data['cross_device_conversions'] : null;
        $this->container['avg_deliver_rank'] = isset($data['avg_deliver_rank']) ? $data['avg_deliver_rank'] : null;
        $this->container['measured_imps'] = isset($data['measured_imps']) ? $data['measured_imps'] : null;
        $this->container['total_vimps'] = isset($data['total_vimps']) ? $data['total_vimps'] : null;
        $this->container['measured_imps_rate'] = isset($data['measured_imps_rate']) ? $data['measured_imps_rate'] : null;
        $this->container['vimps'] = isset($data['vimps']) ? $data['vimps'] : null;
        $this->container['viewable_imps_rate'] = isset($data['viewable_imps_rate']) ? $data['viewable_imps_rate'] : null;
        $this->container['in_view_rate'] = isset($data['in_view_rate']) ? $data['in_view_rate'] : null;
        $this->container['viewable_clicks'] = isset($data['viewable_clicks']) ? $data['viewable_clicks'] : null;
        $this->container['in_view_click_cnt'] = isset($data['in_view_click_cnt']) ? $data['in_view_click_cnt'] : null;
        $this->container['viewable_click_rate'] = isset($data['viewable_click_rate']) ? $data['viewable_click_rate'] : null;
        $this->container['in_view_click_rate'] = isset($data['in_view_click_rate']) ? $data['in_view_click_rate'] : null;
        $this->container['paid_video_views'] = isset($data['paid_video_views']) ? $data['paid_video_views'] : null;
        $this->container['paid_video_view_rate'] = isset($data['paid_video_view_rate']) ? $data['paid_video_view_rate'] : null;
        $this->container['average_cpv'] = isset($data['average_cpv']) ? $data['average_cpv'] : null;
        $this->container['video_views'] = isset($data['video_views']) ? $data['video_views'] : null;
        $this->container['video_views_to25'] = isset($data['video_views_to25']) ? $data['video_views_to25'] : null;
        $this->container['video_views_to50'] = isset($data['video_views_to50']) ? $data['video_views_to50'] : null;
        $this->container['video_views_to75'] = isset($data['video_views_to75']) ? $data['video_views_to75'] : null;
        $this->container['video_views_to95'] = isset($data['video_views_to95']) ? $data['video_views_to95'] : null;
        $this->container['video_views_to100'] = isset($data['video_views_to100']) ? $data['video_views_to100'] : null;
        $this->container['video_views_to3_sec'] = isset($data['video_views_to3_sec']) ? $data['video_views_to3_sec'] : null;
        $this->container['video_views_to10_sec'] = isset($data['video_views_to10_sec']) ? $data['video_views_to10_sec'] : null;
        $this->container['average_rate_video_viewed'] = isset($data['average_rate_video_viewed']) ? $data['average_rate_video_viewed'] : null;
        $this->container['average_duration_video_viewed'] = isset($data['average_duration_video_viewed']) ? $data['average_duration_video_viewed'] : null;
        $this->container['impression_share'] = isset($data['impression_share']) ? $data['impression_share'] : null;
        $this->container['budget_impression_share_lost_rate'] = isset($data['budget_impression_share_lost_rate']) ? $data['budget_impression_share_lost_rate'] : null;
        $this->container['rank_impression_share_lost_rate'] = isset($data['rank_impression_share_lost_rate']) ? $data['rank_impression_share_lost_rate'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets imps
     *
     * @return int|null
     */
    public function getImps()
    {
        return $this->container['imps'];
    }

    /**
     * Sets imps
     *
     * @param int|null $imps <div lang=\"ja\">インプレッション数</div> <div lang=\"en\">Number of impressions</div>
     *
     * @return $this
     */
    public function setImps($imps)
    {
        $this->container['imps'] = $imps;

        return $this;
    }

    /**
     * Gets imps_prev
     *
     * @return double|null
     */
    public function getImpsPrev()
    {
        return $this->container['imps_prev'];
    }

    /**
     * Sets imps_prev
     *
     * @param double|null $imps_prev <div lang=\"ja\">インプレッション数（旧）</div> <div lang=\"en\">Impressions (previous)</div>
     *
     * @return $this
     */
    public function setImpsPrev($imps_prev)
    {
        $this->container['imps_prev'] = $imps_prev;

        return $this;
    }

    /**
     * Gets click_cnt
     *
     * @return int|null
     */
    public function getClickCnt()
    {
        return $this->container['click_cnt'];
    }

    /**
     * Sets click_cnt
     *
     * @param int|null $click_cnt <div lang=\"ja\">クリック数</div> <div lang=\"en\">Number of clicks</div>
     *
     * @return $this
     */
    public function setClickCnt($click_cnt)
    {
        $this->container['click_cnt'] = $click_cnt;

        return $this;
    }

    /**
     * Gets click_rate
     *
     * @return double|null
     */
    public function getClickRate()
    {
        return $this->container['click_rate'];
    }

    /**
     * Sets click_rate
     *
     * @param double|null $click_rate <div lang=\"ja\">クリック率</div> <div lang=\"en\">Click through rate</div>
     *
     * @return $this
     */
    public function setClickRate($click_rate)
    {
        $this->container['click_rate'] = $click_rate;

        return $this;
    }

    /**
     * Gets click_rate_prev
     *
     * @return double|null
     */
    public function getClickRatePrev()
    {
        return $this->container['click_rate_prev'];
    }

    /**
     * Sets click_rate_prev
     *
     * @param double|null $click_rate_prev <div lang=\"ja\">クリック率（旧）</div> <div lang=\"en\">CTR (previous)</div>
     *
     * @return $this
     */
    public function setClickRatePrev($click_rate_prev)
    {
        $this->container['click_rate_prev'] = $click_rate_prev;

        return $this;
    }

    /**
     * Gets cost
     *
     * @return double|null
     */
    public function getCost()
    {
        return $this->container['cost'];
    }

    /**
     * Sets cost
     *
     * @param double|null $cost <div lang=\"ja\">コスト</div> <div lang=\"en\">Cost</div>
     *
     * @return $this
     */
    public function setCost($cost)
    {
        $this->container['cost'] = $cost;

        return $this;
    }

    /**
     * Gets avg_cpc
     *
     * @return double|null
     */
    public function getAvgCpc()
    {
        return $this->container['avg_cpc'];
    }

    /**
     * Sets avg_cpc
     *
     * @param double|null $avg_cpc <div lang=\"ja\">平均CPC</div> <div lang=\"en\">Avg. CPC</div>
     *
     * @return $this
     */
    public function setAvgCpc($avg_cpc)
    {
        $this->container['avg_cpc'] = $avg_cpc;

        return $this;
    }

    /**
     * Gets conversions
     *
     * @return int|null
     */
    public function getConversions()
    {
        return $this->container['conversions'];
    }

    /**
     * Sets conversions
     *
     * @param int|null $conversions <div lang=\"ja\">コンバージョン数</div> <div lang=\"en\">Conversions</div>
     *
     * @return $this
     */
    public function setConversions($conversions)
    {
        $this->container['conversions'] = $conversions;

        return $this;
    }

    /**
     * Gets conversion_rate
     *
     * @return double|null
     */
    public function getConversionRate()
    {
        return $this->container['conversion_rate'];
    }

    /**
     * Sets conversion_rate
     *
     * @param double|null $conversion_rate <div lang=\"ja\">コンバージョン率</div> <div lang=\"en\">Conv. rate</div>
     *
     * @return $this
     */
    public function setConversionRate($conversion_rate)
    {
        $this->container['conversion_rate'] = $conversion_rate;

        return $this;
    }

    /**
     * Gets conversions_via_ad_click
     *
     * @return int|null
     */
    public function getConversionsViaAdClick()
    {
        return $this->container['conversions_via_ad_click'];
    }

    /**
     * Sets conversions_via_ad_click
     *
     * @param int|null $conversions_via_ad_click <div lang=\"ja\">コンバージョン数（クリック経由）</div> <div lang=\"en\">Conversions (via click)</div>
     *
     * @return $this
     */
    public function setConversionsViaAdClick($conversions_via_ad_click)
    {
        $this->container['conversions_via_ad_click'] = $conversions_via_ad_click;

        return $this;
    }

    /**
     * Gets conversion_rate_via_ad_click
     *
     * @return double|null
     */
    public function getConversionRateViaAdClick()
    {
        return $this->container['conversion_rate_via_ad_click'];
    }

    /**
     * Sets conversion_rate_via_ad_click
     *
     * @param double|null $conversion_rate_via_ad_click <div lang=\"ja\">コンバージョン率（クリック経由）</div> <div lang=\"en\">Conv. rate (via click)</div>
     *
     * @return $this
     */
    public function setConversionRateViaAdClick($conversion_rate_via_ad_click)
    {
        $this->container['conversion_rate_via_ad_click'] = $conversion_rate_via_ad_click;

        return $this;
    }

    /**
     * Gets all_conversions
     *
     * @return int|null
     */
    public function getAllConversions()
    {
        return $this->container['all_conversions'];
    }

    /**
     * Sets all_conversions
     *
     * @param int|null $all_conversions <div lang=\"ja\">コンバージョン数（全て）</div> <div lang=\"en\">Conversions (all)</div>
     *
     * @return $this
     */
    public function setAllConversions($all_conversions)
    {
        $this->container['all_conversions'] = $all_conversions;

        return $this;
    }

    /**
     * Gets all_conversion_rate
     *
     * @return double|null
     */
    public function getAllConversionRate()
    {
        return $this->container['all_conversion_rate'];
    }

    /**
     * Sets all_conversion_rate
     *
     * @param double|null $all_conversion_rate <div lang=\"ja\">コンバージョン率（全て）</div> <div lang=\"en\">Conv. rate (all)</div>
     *
     * @return $this
     */
    public function setAllConversionRate($all_conversion_rate)
    {
        $this->container['all_conversion_rate'] = $all_conversion_rate;

        return $this;
    }

    /**
     * Gets cpa
     *
     * @return string|null
     */
    public function getCpa()
    {
        return $this->container['cpa'];
    }

    /**
     * Sets cpa
     *
     * @param string|null $cpa <div lang=\"ja\">コンバージョン単価</div> <div lang=\"en\">Conversion cost per acquisition</div>
     *
     * @return $this
     */
    public function setCpa($cpa)
    {
        $this->container['cpa'] = $cpa;

        return $this;
    }

    /**
     * Gets conversion_value
     *
     * @return string|null
     */
    public function getConversionValue()
    {
        return $this->container['conversion_value'];
    }

    /**
     * Sets conversion_value
     *
     * @param string|null $conversion_value <div lang=\"ja\">コンバージョンの価値</div> <div lang=\"en\">Conv. value</div>
     *
     * @return $this
     */
    public function setConversionValue($conversion_value)
    {
        $this->container['conversion_value'] = $conversion_value;

        return $this;
    }

    /**
     * Gets value_per_conversions
     *
     * @return string|null
     */
    public function getValuePerConversions()
    {
        return $this->container['value_per_conversions'];
    }

    /**
     * Sets value_per_conversions
     *
     * @param string|null $value_per_conversions <div lang=\"ja\">コンバージョンの価値/コンバージョン数</div> <div lang=\"en\">Conv. value/conv.</div>
     *
     * @return $this
     */
    public function setValuePerConversions($value_per_conversions)
    {
        $this->container['value_per_conversions'] = $value_per_conversions;

        return $this;
    }

    /**
     * Gets conv_value_per_cost
     *
     * @return double|null
     */
    public function getConvValuePerCost()
    {
        return $this->container['conv_value_per_cost'];
    }

    /**
     * Sets conv_value_per_cost
     *
     * @param double|null $conv_value_per_cost <div lang=\"ja\">コンバージョンの価値（クリック経由）/コスト</div> <div lang=\"en\">Conversions value/cost</div>
     *
     * @return $this
     */
    public function setConvValuePerCost($conv_value_per_cost)
    {
        $this->container['conv_value_per_cost'] = $conv_value_per_cost;

        return $this;
    }

    /**
     * Gets all_conv_value_per_cost
     *
     * @return double|null
     */
    public function getAllConvValuePerCost()
    {
        return $this->container['all_conv_value_per_cost'];
    }

    /**
     * Sets all_conv_value_per_cost
     *
     * @param double|null $all_conv_value_per_cost <div lang=\"ja\">コンバージョンの価値（全て）/コスト</div> <div lang=\"en\">Conv. value (all)/cost All Conv.</div>
     *
     * @return $this
     */
    public function setAllConvValuePerCost($all_conv_value_per_cost)
    {
        $this->container['all_conv_value_per_cost'] = $all_conv_value_per_cost;

        return $this;
    }

    /**
     * Gets conv_value_via_ad_click_per_cost
     *
     * @return double|null
     */
    public function getConvValueViaAdClickPerCost()
    {
        return $this->container['conv_value_via_ad_click_per_cost'];
    }

    /**
     * Sets conv_value_via_ad_click_per_cost
     *
     * @param double|null $conv_value_via_ad_click_per_cost <div lang=\"ja\">コンバージョンの価値（クリック経由）/コスト</div> <div lang=\"en\">Conversions value(via ad clicks)/cost</div>
     *
     * @return $this
     */
    public function setConvValueViaAdClickPerCost($conv_value_via_ad_click_per_cost)
    {
        $this->container['conv_value_via_ad_click_per_cost'] = $conv_value_via_ad_click_per_cost;

        return $this;
    }

    /**
     * Gets all_conversion_value
     *
     * @return string|null
     */
    public function getAllConversionValue()
    {
        return $this->container['all_conversion_value'];
    }

    /**
     * Sets all_conversion_value
     *
     * @param string|null $all_conversion_value <div lang=\"ja\">コンバージョンの価値（全て）</div> <div lang=\"en\">Conv. value (all)</div>
     *
     * @return $this
     */
    public function setAllConversionValue($all_conversion_value)
    {
        $this->container['all_conversion_value'] = $all_conversion_value;

        return $this;
    }

    /**
     * Gets value_per_all_conversions
     *
     * @return string|null
     */
    public function getValuePerAllConversions()
    {
        return $this->container['value_per_all_conversions'];
    }

    /**
     * Sets value_per_all_conversions
     *
     * @param string|null $value_per_all_conversions <div lang=\"ja\">コンバージョンの価値（全て）/コンバージョン数（全て）</div> <div lang=\"en\">Conv. value (all)/conv. (all)</div>
     *
     * @return $this
     */
    public function setValuePerAllConversions($value_per_all_conversions)
    {
        $this->container['value_per_all_conversions'] = $value_per_all_conversions;

        return $this;
    }

    /**
     * Gets conversion_value_via_ad_click
     *
     * @return string|null
     */
    public function getConversionValueViaAdClick()
    {
        return $this->container['conversion_value_via_ad_click'];
    }

    /**
     * Sets conversion_value_via_ad_click
     *
     * @param string|null $conversion_value_via_ad_click <div lang=\"ja\">コンバージョンの価値（クリック経由）</div> <div lang=\"en\">Conv. value (via click)</div>
     *
     * @return $this
     */
    public function setConversionValueViaAdClick($conversion_value_via_ad_click)
    {
        $this->container['conversion_value_via_ad_click'] = $conversion_value_via_ad_click;

        return $this;
    }

    /**
     * Gets value_per_conversions_via_ad_click
     *
     * @return string|null
     */
    public function getValuePerConversionsViaAdClick()
    {
        return $this->container['value_per_conversions_via_ad_click'];
    }

    /**
     * Sets value_per_conversions_via_ad_click
     *
     * @param string|null $value_per_conversions_via_ad_click <div lang=\"ja\">コンバージョンの価値（クリック経由）/コンバージョン数（クリック経由）</div> <div lang=\"en\">Conv. value (via click)/conv. (via click)</div>
     *
     * @return $this
     */
    public function setValuePerConversionsViaAdClick($value_per_conversions_via_ad_click)
    {
        $this->container['value_per_conversions_via_ad_click'] = $value_per_conversions_via_ad_click;

        return $this;
    }

    /**
     * Gets cpa_via_ad_click
     *
     * @return string|null
     */
    public function getCpaViaAdClick()
    {
        return $this->container['cpa_via_ad_click'];
    }

    /**
     * Sets cpa_via_ad_click
     *
     * @param string|null $cpa_via_ad_click <div lang=\"ja\">コスト/コンバージョン数（クリック経由）</div> <div lang=\"en\">Cost/conv. (via click)</div>
     *
     * @return $this
     */
    public function setCpaViaAdClick($cpa_via_ad_click)
    {
        $this->container['cpa_via_ad_click'] = $cpa_via_ad_click;

        return $this;
    }

    /**
     * Gets all_cpa
     *
     * @return string|null
     */
    public function getAllCpa()
    {
        return $this->container['all_cpa'];
    }

    /**
     * Sets all_cpa
     *
     * @param string|null $all_cpa <div lang=\"ja\">コスト/コンバージョン数（全て）</div> <div lang=\"en\">Cost/conv. (all)</div>
     *
     * @return $this
     */
    public function setAllCpa($all_cpa)
    {
        $this->container['all_cpa'] = $all_cpa;

        return $this;
    }

    /**
     * Gets cross_device_conversions
     *
     * @return int|null
     */
    public function getCrossDeviceConversions()
    {
        return $this->container['cross_device_conversions'];
    }

    /**
     * Sets cross_device_conversions
     *
     * @param int|null $cross_device_conversions <div lang=\"ja\">クロスデバイスコンバージョン数</div> <div lang=\"en\">Cross-device conv.</div>
     *
     * @return $this
     */
    public function setCrossDeviceConversions($cross_device_conversions)
    {
        $this->container['cross_device_conversions'] = $cross_device_conversions;

        return $this;
    }

    /**
     * Gets avg_deliver_rank
     *
     * @return double|null
     */
    public function getAvgDeliverRank()
    {
        return $this->container['avg_deliver_rank'];
    }

    /**
     * Sets avg_deliver_rank
     *
     * @param double|null $avg_deliver_rank <div lang=\"ja\">平均掲載順位（配信された時のeCPM順位の平均）</div> <div lang=\"en\">Avg. position (the average of eCPM rank on ads delivery)</div>
     *
     * @return $this
     */
    public function setAvgDeliverRank($avg_deliver_rank)
    {
        $this->container['avg_deliver_rank'] = $avg_deliver_rank;

        return $this;
    }

    /**
     * Gets measured_imps
     *
     * @return double|null
     */
    public function getMeasuredImps()
    {
        return $this->container['measured_imps'];
    }

    /**
     * Sets measured_imps
     *
     * @param double|null $measured_imps <div lang=\"ja\">メジャードインプレッション数</div> <div lang=\"en\">Measured impressions</div>
     *
     * @return $this
     */
    public function setMeasuredImps($measured_imps)
    {
        $this->container['measured_imps'] = $measured_imps;

        return $this;
    }

    /**
     * Gets total_vimps
     *
     * @return int|null
     */
    public function getTotalVimps()
    {
        return $this->container['total_vimps'];
    }

    /**
     * Sets total_vimps
     *
     * @param int|null $total_vimps <div lang=\"ja\">メジャードインプレッション数（旧）</div> <div lang=\"en\">Measured impressions (previous)</div>
     *
     * @return $this
     */
    public function setTotalVimps($total_vimps)
    {
        $this->container['total_vimps'] = $total_vimps;

        return $this;
    }

    /**
     * Gets measured_imps_rate
     *
     * @return double|null
     */
    public function getMeasuredImpsRate()
    {
        return $this->container['measured_imps_rate'];
    }

    /**
     * Sets measured_imps_rate
     *
     * @param double|null $measured_imps_rate <div lang=\"ja\">メジャードインプレッション測定率</div> <div lang=\"en\">Measured impression rate</div>
     *
     * @return $this
     */
    public function setMeasuredImpsRate($measured_imps_rate)
    {
        $this->container['measured_imps_rate'] = $measured_imps_rate;

        return $this;
    }

    /**
     * Gets vimps
     *
     * @return int|null
     */
    public function getVimps()
    {
        return $this->container['vimps'];
    }

    /**
     * Sets vimps
     *
     * @param int|null $vimps <div lang=\"ja\">ビューアブルインプレッション数</div> <div lang=\"en\">Viewable impressions</div>
     *
     * @return $this
     */
    public function setVimps($vimps)
    {
        $this->container['vimps'] = $vimps;

        return $this;
    }

    /**
     * Gets viewable_imps_rate
     *
     * @return double|null
     */
    public function getViewableImpsRate()
    {
        return $this->container['viewable_imps_rate'];
    }

    /**
     * Sets viewable_imps_rate
     *
     * @param double|null $viewable_imps_rate <div lang=\"ja\">ビューアブルインプレッション率</div> <div lang=\"en\">Viewable impression rate</div>
     *
     * @return $this
     */
    public function setViewableImpsRate($viewable_imps_rate)
    {
        $this->container['viewable_imps_rate'] = $viewable_imps_rate;

        return $this;
    }

    /**
     * Gets in_view_rate
     *
     * @return double|null
     */
    public function getInViewRate()
    {
        return $this->container['in_view_rate'];
    }

    /**
     * Sets in_view_rate
     *
     * @param double|null $in_view_rate <div lang=\"ja\">ビューアブルインプレッション率（旧）</div> <div lang=\"en\">Viewable impression rate (previous)</div>
     *
     * @return $this
     */
    public function setInViewRate($in_view_rate)
    {
        $this->container['in_view_rate'] = $in_view_rate;

        return $this;
    }

    /**
     * Gets viewable_clicks
     *
     * @return double|null
     */
    public function getViewableClicks()
    {
        return $this->container['viewable_clicks'];
    }

    /**
     * Sets viewable_clicks
     *
     * @param double|null $viewable_clicks <div lang=\"ja\">ビューアブルクリック数</div> <div lang=\"en\">Viewable clicks</div>
     *
     * @return $this
     */
    public function setViewableClicks($viewable_clicks)
    {
        $this->container['viewable_clicks'] = $viewable_clicks;

        return $this;
    }

    /**
     * Gets in_view_click_cnt
     *
     * @return int|null
     */
    public function getInViewClickCnt()
    {
        return $this->container['in_view_click_cnt'];
    }

    /**
     * Sets in_view_click_cnt
     *
     * @param int|null $in_view_click_cnt <div lang=\"ja\">ビューアブルクリック数（旧）</div> <div lang=\"en\">Viewable clicks (previous)</div>
     *
     * @return $this
     */
    public function setInViewClickCnt($in_view_click_cnt)
    {
        $this->container['in_view_click_cnt'] = $in_view_click_cnt;

        return $this;
    }

    /**
     * Gets viewable_click_rate
     *
     * @return double|null
     */
    public function getViewableClickRate()
    {
        return $this->container['viewable_click_rate'];
    }

    /**
     * Sets viewable_click_rate
     *
     * @param double|null $viewable_click_rate <div lang=\"ja\">ビューアブルクリック率</div> <div lang=\"en\">Viewable CTR</div>
     *
     * @return $this
     */
    public function setViewableClickRate($viewable_click_rate)
    {
        $this->container['viewable_click_rate'] = $viewable_click_rate;

        return $this;
    }

    /**
     * Gets in_view_click_rate
     *
     * @return double|null
     */
    public function getInViewClickRate()
    {
        return $this->container['in_view_click_rate'];
    }

    /**
     * Sets in_view_click_rate
     *
     * @param double|null $in_view_click_rate <div lang=\"ja\">ビューアブルクリック率（旧）</div> <div lang=\"en\">Viewable CTR (previous)</div>
     *
     * @return $this
     */
    public function setInViewClickRate($in_view_click_rate)
    {
        $this->container['in_view_click_rate'] = $in_view_click_rate;

        return $this;
    }

    /**
     * Gets paid_video_views
     *
     * @return int|null
     */
    public function getPaidVideoViews()
    {
        return $this->container['paid_video_views'];
    }

    /**
     * Sets paid_video_views
     *
     * @param int|null $paid_video_views <div lang=\"ja\">課金が発生した動画再生数 (CPV課金キャンペーンのみ)</div> <div lang=\"en\">Paid video views (CPV)</div>
     *
     * @return $this
     */
    public function setPaidVideoViews($paid_video_views)
    {
        $this->container['paid_video_views'] = $paid_video_views;

        return $this;
    }

    /**
     * Gets paid_video_view_rate
     *
     * @return double|null
     */
    public function getPaidVideoViewRate()
    {
        return $this->container['paid_video_view_rate'];
    }

    /**
     * Sets paid_video_view_rate
     *
     * @param double|null $paid_video_view_rate <div lang=\"ja\">課金が発生した動画再生率 (CPV課金キャンペーンのみ)</div> <div lang=\"en\">Paid video view rate (CPV)</div>
     *
     * @return $this
     */
    public function setPaidVideoViewRate($paid_video_view_rate)
    {
        $this->container['paid_video_view_rate'] = $paid_video_view_rate;

        return $this;
    }

    /**
     * Gets average_cpv
     *
     * @return double|null
     */
    public function getAverageCpv()
    {
        return $this->container['average_cpv'];
    }

    /**
     * Sets average_cpv
     *
     * @param double|null $average_cpv <div lang=\"ja\">平均CPV</div> <div lang=\"en\">Avg. CPV</div>
     *
     * @return $this
     */
    public function setAverageCpv($average_cpv)
    {
        $this->container['average_cpv'] = $average_cpv;

        return $this;
    }

    /**
     * Gets video_views
     *
     * @return int|null
     */
    public function getVideoViews()
    {
        return $this->container['video_views'];
    }

    /**
     * Sets video_views
     *
     * @param int|null $video_views <div lang=\"ja\">動画の再生開始数</div> <div lang=\"en\">Video views</div>
     *
     * @return $this
     */
    public function setVideoViews($video_views)
    {
        $this->container['video_views'] = $video_views;

        return $this;
    }

    /**
     * Gets video_views_to25
     *
     * @return int|null
     */
    public function getVideoViewsTo25()
    {
        return $this->container['video_views_to25'];
    }

    /**
     * Sets video_views_to25
     *
     * @param int|null $video_views_to25 <div lang=\"ja\">動画の25％再生数</div> <div lang=\"en\">25% video views</div>
     *
     * @return $this
     */
    public function setVideoViewsTo25($video_views_to25)
    {
        $this->container['video_views_to25'] = $video_views_to25;

        return $this;
    }

    /**
     * Gets video_views_to50
     *
     * @return int|null
     */
    public function getVideoViewsTo50()
    {
        return $this->container['video_views_to50'];
    }

    /**
     * Sets video_views_to50
     *
     * @param int|null $video_views_to50 <div lang=\"ja\">動画の50％再生数</div> <div lang=\"en\">50% video views</div>
     *
     * @return $this
     */
    public function setVideoViewsTo50($video_views_to50)
    {
        $this->container['video_views_to50'] = $video_views_to50;

        return $this;
    }

    /**
     * Gets video_views_to75
     *
     * @return int|null
     */
    public function getVideoViewsTo75()
    {
        return $this->container['video_views_to75'];
    }

    /**
     * Sets video_views_to75
     *
     * @param int|null $video_views_to75 <div lang=\"ja\">動画の75％再生数</div> <div lang=\"en\">75% video views</div>
     *
     * @return $this
     */
    public function setVideoViewsTo75($video_views_to75)
    {
        $this->container['video_views_to75'] = $video_views_to75;

        return $this;
    }

    /**
     * Gets video_views_to95
     *
     * @return int|null
     */
    public function getVideoViewsTo95()
    {
        return $this->container['video_views_to95'];
    }

    /**
     * Sets video_views_to95
     *
     * @param int|null $video_views_to95 <div lang=\"ja\">動画の95％再生数</div> <div lang=\"en\">95% video views</div>
     *
     * @return $this
     */
    public function setVideoViewsTo95($video_views_to95)
    {
        $this->container['video_views_to95'] = $video_views_to95;

        return $this;
    }

    /**
     * Gets video_views_to100
     *
     * @return int|null
     */
    public function getVideoViewsTo100()
    {
        return $this->container['video_views_to100'];
    }

    /**
     * Sets video_views_to100
     *
     * @param int|null $video_views_to100 <div lang=\"ja\">動画の100％再生数</div> <div lang=\"en\">100% video views</div>
     *
     * @return $this
     */
    public function setVideoViewsTo100($video_views_to100)
    {
        $this->container['video_views_to100'] = $video_views_to100;

        return $this;
    }

    /**
     * Gets video_views_to3_sec
     *
     * @return int|null
     */
    public function getVideoViewsTo3Sec()
    {
        return $this->container['video_views_to3_sec'];
    }

    /**
     * Sets video_views_to3_sec
     *
     * @param int|null $video_views_to3_sec <div lang=\"ja\">動画の3秒再生数</div> <div lang=\"en\">3 sec video views</div>
     *
     * @return $this
     */
    public function setVideoViewsTo3Sec($video_views_to3_sec)
    {
        $this->container['video_views_to3_sec'] = $video_views_to3_sec;

        return $this;
    }

    /**
     * Gets video_views_to10_sec
     *
     * @return int|null
     */
    public function getVideoViewsTo10Sec()
    {
        return $this->container['video_views_to10_sec'];
    }

    /**
     * Sets video_views_to10_sec
     *
     * @param int|null $video_views_to10_sec <div lang=\"ja\">動画の10秒再生数</div> <div lang=\"en\">10 sec video views</div>
     *
     * @return $this
     */
    public function setVideoViewsTo10Sec($video_views_to10_sec)
    {
        $this->container['video_views_to10_sec'] = $video_views_to10_sec;

        return $this;
    }

    /**
     * Gets average_rate_video_viewed
     *
     * @return double|null
     */
    public function getAverageRateVideoViewed()
    {
        return $this->container['average_rate_video_viewed'];
    }

    /**
     * Sets average_rate_video_viewed
     *
     * @param double|null $average_rate_video_viewed <div lang=\"ja\">動画の平均再生開始率</div> <div lang=\"en\">Avg. video view rate</div>
     *
     * @return $this
     */
    public function setAverageRateVideoViewed($average_rate_video_viewed)
    {
        $this->container['average_rate_video_viewed'] = $average_rate_video_viewed;

        return $this;
    }

    /**
     * Gets average_duration_video_viewed
     *
     * @return double|null
     */
    public function getAverageDurationVideoViewed()
    {
        return $this->container['average_duration_video_viewed'];
    }

    /**
     * Sets average_duration_video_viewed
     *
     * @param double|null $average_duration_video_viewed <div lang=\"ja\">動画の平均再生時間</div> <div lang=\"en\">Avg. duration of video viewed</div>
     *
     * @return $this
     */
    public function setAverageDurationVideoViewed($average_duration_video_viewed)
    {
        $this->container['average_duration_video_viewed'] = $average_duration_video_viewed;

        return $this;
    }

    /**
     * Gets impression_share
     *
     * @return double|null
     */
    public function getImpressionShare()
    {
        return $this->container['impression_share'];
    }

    /**
     * Sets impression_share
     *
     * @param double|null $impression_share <div lang=\"ja\">インプレッションシェア</div> <div lang=\"en\">Impression share</div>
     *
     * @return $this
     */
    public function setImpressionShare($impression_share)
    {
        $this->container['impression_share'] = $impression_share;

        return $this;
    }

    /**
     * Gets budget_impression_share_lost_rate
     *
     * @return double|null
     */
    public function getBudgetImpressionShareLostRate()
    {
        return $this->container['budget_impression_share_lost_rate'];
    }

    /**
     * Sets budget_impression_share_lost_rate
     *
     * @param double|null $budget_impression_share_lost_rate <div lang=\"ja\">インプレッションシェア損失率（予算）</div> <div lang=\"en\">Impression share lost rate(budget)</div>
     *
     * @return $this
     */
    public function setBudgetImpressionShareLostRate($budget_impression_share_lost_rate)
    {
        $this->container['budget_impression_share_lost_rate'] = $budget_impression_share_lost_rate;

        return $this;
    }

    /**
     * Gets rank_impression_share_lost_rate
     *
     * @return double|null
     */
    public function getRankImpressionShareLostRate()
    {
        return $this->container['rank_impression_share_lost_rate'];
    }

    /**
     * Sets rank_impression_share_lost_rate
     *
     * @param double|null $rank_impression_share_lost_rate <div lang=\"ja\">インプレッションシェア損失率（ランク）</div> <div lang=\"en\">Impression share lost rate(rank)</div>
     *
     * @return $this
     */
    public function setRankImpressionShareLostRate($rank_impression_share_lost_rate)
    {
        $this->container['rank_impression_share_lost_rate'] = $rank_impression_share_lost_rate;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


