<?php
/**
 * CampaignMigrationServiceJob
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CampaignMigrationServiceJob Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;CampaignMigrationServiceJobオブジェクトは、マイグレーションジョブの処理状況を示すオブジェクトです。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;CampaignMigrationServiceJob object indicates processing status of migration job.&lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CampaignMigrationServiceJob implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CampaignMigrationServiceJob';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'account_id' => 'int',
        'failed_count' => 'int',
        'in_progress_count' => 'int',
        'job_status' => '\OpenAPI\Client\Model\CampaignMigrationServiceJobStatus',
        'migration_job_end_date' => 'string',
        'migration_job_id' => 'int',
        'migration_job_submit_date' => 'string',
        'scope' => '\OpenAPI\Client\Model\CampaignMigrationServiceScope',
        'succeeded_count' => 'int',
        'total_count' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'account_id' => 'int64',
        'failed_count' => 'int64',
        'in_progress_count' => 'int64',
        'job_status' => null,
        'migration_job_end_date' => null,
        'migration_job_id' => 'int64',
        'migration_job_submit_date' => null,
        'scope' => null,
        'succeeded_count' => 'int64',
        'total_count' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'accountId',
        'failed_count' => 'failedCount',
        'in_progress_count' => 'inProgressCount',
        'job_status' => 'jobStatus',
        'migration_job_end_date' => 'migrationJobEndDate',
        'migration_job_id' => 'migrationJobId',
        'migration_job_submit_date' => 'migrationJobSubmitDate',
        'scope' => 'scope',
        'succeeded_count' => 'succeededCount',
        'total_count' => 'totalCount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'failed_count' => 'setFailedCount',
        'in_progress_count' => 'setInProgressCount',
        'job_status' => 'setJobStatus',
        'migration_job_end_date' => 'setMigrationJobEndDate',
        'migration_job_id' => 'setMigrationJobId',
        'migration_job_submit_date' => 'setMigrationJobSubmitDate',
        'scope' => 'setScope',
        'succeeded_count' => 'setSucceededCount',
        'total_count' => 'setTotalCount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'failed_count' => 'getFailedCount',
        'in_progress_count' => 'getInProgressCount',
        'job_status' => 'getJobStatus',
        'migration_job_end_date' => 'getMigrationJobEndDate',
        'migration_job_id' => 'getMigrationJobId',
        'migration_job_submit_date' => 'getMigrationJobSubmitDate',
        'scope' => 'getScope',
        'succeeded_count' => 'getSucceededCount',
        'total_count' => 'getTotalCount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['failed_count'] = isset($data['failed_count']) ? $data['failed_count'] : null;
        $this->container['in_progress_count'] = isset($data['in_progress_count']) ? $data['in_progress_count'] : null;
        $this->container['job_status'] = isset($data['job_status']) ? $data['job_status'] : null;
        $this->container['migration_job_end_date'] = isset($data['migration_job_end_date']) ? $data['migration_job_end_date'] : null;
        $this->container['migration_job_id'] = isset($data['migration_job_id']) ? $data['migration_job_id'] : null;
        $this->container['migration_job_submit_date'] = isset($data['migration_job_submit_date']) ? $data['migration_job_submit_date'] : null;
        $this->container['scope'] = isset($data['scope']) ? $data['scope'] : null;
        $this->container['succeeded_count'] = isset($data['succeeded_count']) ? $data['succeeded_count'] : null;
        $this->container['total_count'] = isset($data['total_count']) ? $data['total_count'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int|null $account_id <div lang=\"ja\">アカウントID</div> <div lang=\"en\">Account ID</div>
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets failed_count
     *
     * @return int|null
     */
    public function getFailedCount()
    {
        return $this->container['failed_count'];
    }

    /**
     * Sets failed_count
     *
     * @param int|null $failed_count <div lang=\"ja\">失敗キャンペーン数</div> <div lang=\"en\">Number of failed campaigns</div>
     *
     * @return $this
     */
    public function setFailedCount($failed_count)
    {
        $this->container['failed_count'] = $failed_count;

        return $this;
    }

    /**
     * Gets in_progress_count
     *
     * @return int|null
     */
    public function getInProgressCount()
    {
        return $this->container['in_progress_count'];
    }

    /**
     * Sets in_progress_count
     *
     * @param int|null $in_progress_count <div lang=\"ja\">進行中キャンペーン数</div> <div lang=\"en\">Number of progressing campaigns</div>
     *
     * @return $this
     */
    public function setInProgressCount($in_progress_count)
    {
        $this->container['in_progress_count'] = $in_progress_count;

        return $this;
    }

    /**
     * Gets job_status
     *
     * @return \OpenAPI\Client\Model\CampaignMigrationServiceJobStatus|null
     */
    public function getJobStatus()
    {
        return $this->container['job_status'];
    }

    /**
     * Sets job_status
     *
     * @param \OpenAPI\Client\Model\CampaignMigrationServiceJobStatus|null $job_status job_status
     *
     * @return $this
     */
    public function setJobStatus($job_status)
    {
        $this->container['job_status'] = $job_status;

        return $this;
    }

    /**
     * Gets migration_job_end_date
     *
     * @return string|null
     */
    public function getMigrationJobEndDate()
    {
        return $this->container['migration_job_end_date'];
    }

    /**
     * Sets migration_job_end_date
     *
     * @param string|null $migration_job_end_date <div lang=\"ja\">マイグレーションジョブ終了日時</div> <div lang=\"en\">Migration job end date</div>
     *
     * @return $this
     */
    public function setMigrationJobEndDate($migration_job_end_date)
    {
        $this->container['migration_job_end_date'] = $migration_job_end_date;

        return $this;
    }

    /**
     * Gets migration_job_id
     *
     * @return int|null
     */
    public function getMigrationJobId()
    {
        return $this->container['migration_job_id'];
    }

    /**
     * Sets migration_job_id
     *
     * @param int|null $migration_job_id <div lang=\"ja\">マイグレーションジョブID</div> <div lang=\"en\">Migration job ID</div>
     *
     * @return $this
     */
    public function setMigrationJobId($migration_job_id)
    {
        $this->container['migration_job_id'] = $migration_job_id;

        return $this;
    }

    /**
     * Gets migration_job_submit_date
     *
     * @return string|null
     */
    public function getMigrationJobSubmitDate()
    {
        return $this->container['migration_job_submit_date'];
    }

    /**
     * Sets migration_job_submit_date
     *
     * @param string|null $migration_job_submit_date <div lang=\"ja\">マイグレーションジョブ登録日時</div> <div lang=\"en\">Migration job submit date</div>
     *
     * @return $this
     */
    public function setMigrationJobSubmitDate($migration_job_submit_date)
    {
        $this->container['migration_job_submit_date'] = $migration_job_submit_date;

        return $this;
    }

    /**
     * Gets scope
     *
     * @return \OpenAPI\Client\Model\CampaignMigrationServiceScope|null
     */
    public function getScope()
    {
        return $this->container['scope'];
    }

    /**
     * Sets scope
     *
     * @param \OpenAPI\Client\Model\CampaignMigrationServiceScope|null $scope scope
     *
     * @return $this
     */
    public function setScope($scope)
    {
        $this->container['scope'] = $scope;

        return $this;
    }

    /**
     * Gets succeeded_count
     *
     * @return int|null
     */
    public function getSucceededCount()
    {
        return $this->container['succeeded_count'];
    }

    /**
     * Sets succeeded_count
     *
     * @param int|null $succeeded_count <div lang=\"ja\">正常終了キャンペーン数</div> <div lang=\"en\">Number of completed campaigns</div>
     *
     * @return $this
     */
    public function setSucceededCount($succeeded_count)
    {
        $this->container['succeeded_count'] = $succeeded_count;

        return $this;
    }

    /**
     * Gets total_count
     *
     * @return int|null
     */
    public function getTotalCount()
    {
        return $this->container['total_count'];
    }

    /**
     * Sets total_count
     *
     * @param int|null $total_count <div lang=\"ja\">全キャンペーン数</div> <div lang=\"en\">Number of total campaigns</div>
     *
     * @return $this
     */
    public function setTotalCount($total_count)
    {
        $this->container['total_count'] = $total_count;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


