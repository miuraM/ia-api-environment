<?php
/**
 * AuditLogServiceJob
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * AuditLogServiceJob Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;AuditLogServiceJobは操作履歴のダウンロードジョブの情報を保持するオブジェクトです。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;AuditLogServiceJob object is a container for storing the download operation history job information.&lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AuditLogServiceJob implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AuditLogServiceJob';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'account_id' => 'int',
        'audit_log_job_end_date' => 'string',
        'audit_log_job_id' => 'int',
        'audit_log_job_name' => 'string',
        'audit_log_job_start_date' => 'string',
        'audit_log_job_user_name' => 'string',
        'campaign_ids' => 'int[]',
        'date_range' => '\OpenAPI\Client\Model\AuditLogServiceDateRange',
        'job_status' => '\OpenAPI\Client\Model\AuditLogServiceJobStatus',
        'lang' => '\OpenAPI\Client\Model\AuditLogServiceLang',
        'progress' => 'int',
        'update_source' => '\OpenAPI\Client\Model\AuditLogServiceUpdateSource'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'account_id' => 'int64',
        'audit_log_job_end_date' => null,
        'audit_log_job_id' => 'int64',
        'audit_log_job_name' => null,
        'audit_log_job_start_date' => null,
        'audit_log_job_user_name' => null,
        'campaign_ids' => 'int64',
        'date_range' => null,
        'job_status' => null,
        'lang' => null,
        'progress' => 'int32',
        'update_source' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'accountId',
        'audit_log_job_end_date' => 'auditLogJobEndDate',
        'audit_log_job_id' => 'auditLogJobId',
        'audit_log_job_name' => 'auditLogJobName',
        'audit_log_job_start_date' => 'auditLogJobStartDate',
        'audit_log_job_user_name' => 'auditLogJobUserName',
        'campaign_ids' => 'campaignIds',
        'date_range' => 'dateRange',
        'job_status' => 'jobStatus',
        'lang' => 'lang',
        'progress' => 'progress',
        'update_source' => 'updateSource'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'audit_log_job_end_date' => 'setAuditLogJobEndDate',
        'audit_log_job_id' => 'setAuditLogJobId',
        'audit_log_job_name' => 'setAuditLogJobName',
        'audit_log_job_start_date' => 'setAuditLogJobStartDate',
        'audit_log_job_user_name' => 'setAuditLogJobUserName',
        'campaign_ids' => 'setCampaignIds',
        'date_range' => 'setDateRange',
        'job_status' => 'setJobStatus',
        'lang' => 'setLang',
        'progress' => 'setProgress',
        'update_source' => 'setUpdateSource'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'audit_log_job_end_date' => 'getAuditLogJobEndDate',
        'audit_log_job_id' => 'getAuditLogJobId',
        'audit_log_job_name' => 'getAuditLogJobName',
        'audit_log_job_start_date' => 'getAuditLogJobStartDate',
        'audit_log_job_user_name' => 'getAuditLogJobUserName',
        'campaign_ids' => 'getCampaignIds',
        'date_range' => 'getDateRange',
        'job_status' => 'getJobStatus',
        'lang' => 'getLang',
        'progress' => 'getProgress',
        'update_source' => 'getUpdateSource'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['audit_log_job_end_date'] = isset($data['audit_log_job_end_date']) ? $data['audit_log_job_end_date'] : null;
        $this->container['audit_log_job_id'] = isset($data['audit_log_job_id']) ? $data['audit_log_job_id'] : null;
        $this->container['audit_log_job_name'] = isset($data['audit_log_job_name']) ? $data['audit_log_job_name'] : null;
        $this->container['audit_log_job_start_date'] = isset($data['audit_log_job_start_date']) ? $data['audit_log_job_start_date'] : null;
        $this->container['audit_log_job_user_name'] = isset($data['audit_log_job_user_name']) ? $data['audit_log_job_user_name'] : null;
        $this->container['campaign_ids'] = isset($data['campaign_ids']) ? $data['campaign_ids'] : null;
        $this->container['date_range'] = isset($data['date_range']) ? $data['date_range'] : null;
        $this->container['job_status'] = isset($data['job_status']) ? $data['job_status'] : null;
        $this->container['lang'] = isset($data['lang']) ? $data['lang'] : null;
        $this->container['progress'] = isset($data['progress']) ? $data['progress'] : null;
        $this->container['update_source'] = isset($data['update_source']) ? $data['update_source'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int|null $account_id <div lang=\"ja\"> アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Account ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets audit_log_job_end_date
     *
     * @return string|null
     */
    public function getAuditLogJobEndDate()
    {
        return $this->container['audit_log_job_end_date'];
    }

    /**
     * Sets audit_log_job_end_date
     *
     * @param string|null $audit_log_job_end_date <div lang=\"ja\"> 操作履歴ダウンロードジョブの終了日時です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The job end date (YYYY-MM-DDTHH:MI:SS+9:00).<br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setAuditLogJobEndDate($audit_log_job_end_date)
    {
        $this->container['audit_log_job_end_date'] = $audit_log_job_end_date;

        return $this;
    }

    /**
     * Gets audit_log_job_id
     *
     * @return int|null
     */
    public function getAuditLogJobId()
    {
        return $this->container['audit_log_job_id'];
    }

    /**
     * Sets audit_log_job_id
     *
     * @param int|null $audit_log_job_id <div lang=\"ja\"> 操作履歴のダウンロードジョブIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The operation history job ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setAuditLogJobId($audit_log_job_id)
    {
        $this->container['audit_log_job_id'] = $audit_log_job_id;

        return $this;
    }

    /**
     * Gets audit_log_job_name
     *
     * @return string|null
     */
    public function getAuditLogJobName()
    {
        return $this->container['audit_log_job_name'];
    }

    /**
     * Sets audit_log_job_name
     *
     * @param string|null $audit_log_job_name <div lang=\"ja\"> 操作履歴のダウンロードジョブ名です。<br> このフィールドは、リクエストの場合は省略可能となります。 </div> <div lang=\"en\"> The operation history job name.<br> This field is optional in requests. </div>
     *
     * @return $this
     */
    public function setAuditLogJobName($audit_log_job_name)
    {
        $this->container['audit_log_job_name'] = $audit_log_job_name;

        return $this;
    }

    /**
     * Gets audit_log_job_start_date
     *
     * @return string|null
     */
    public function getAuditLogJobStartDate()
    {
        return $this->container['audit_log_job_start_date'];
    }

    /**
     * Sets audit_log_job_start_date
     *
     * @param string|null $audit_log_job_start_date <div lang=\"ja\"> 操作履歴ダウンロードジョブの開始日時です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The job start date (YYYY-MM-DDTHH:MI:SS+9:00).<br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setAuditLogJobStartDate($audit_log_job_start_date)
    {
        $this->container['audit_log_job_start_date'] = $audit_log_job_start_date;

        return $this;
    }

    /**
     * Gets audit_log_job_user_name
     *
     * @return string|null
     */
    public function getAuditLogJobUserName()
    {
        return $this->container['audit_log_job_user_name'];
    }

    /**
     * Sets audit_log_job_user_name
     *
     * @param string|null $audit_log_job_user_name <div lang=\"ja\"> 操作履歴ダウンロードジョブの実行ユーザー名です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The user name who executes the operation history job.<br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setAuditLogJobUserName($audit_log_job_user_name)
    {
        $this->container['audit_log_job_user_name'] = $audit_log_job_user_name;

        return $this;
    }

    /**
     * Gets campaign_ids
     *
     * @return int[]|null
     */
    public function getCampaignIds()
    {
        return $this->container['campaign_ids'];
    }

    /**
     * Sets campaign_ids
     *
     * @param int[]|null $campaign_ids <div lang=\"ja\"> ダウンロード対象のキャンペーンIDです。<br> このフィールドは、リクエストの場合は省略可能となります。 </div> <div lang=\"en\"> Campaign ID of the download object.<br> This field is optional in requests. </div>
     *
     * @return $this
     */
    public function setCampaignIds($campaign_ids)
    {
        $this->container['campaign_ids'] = $campaign_ids;

        return $this;
    }

    /**
     * Gets date_range
     *
     * @return \OpenAPI\Client\Model\AuditLogServiceDateRange|null
     */
    public function getDateRange()
    {
        return $this->container['date_range'];
    }

    /**
     * Sets date_range
     *
     * @param \OpenAPI\Client\Model\AuditLogServiceDateRange|null $date_range date_range
     *
     * @return $this
     */
    public function setDateRange($date_range)
    {
        $this->container['date_range'] = $date_range;

        return $this;
    }

    /**
     * Gets job_status
     *
     * @return \OpenAPI\Client\Model\AuditLogServiceJobStatus|null
     */
    public function getJobStatus()
    {
        return $this->container['job_status'];
    }

    /**
     * Sets job_status
     *
     * @param \OpenAPI\Client\Model\AuditLogServiceJobStatus|null $job_status job_status
     *
     * @return $this
     */
    public function setJobStatus($job_status)
    {
        $this->container['job_status'] = $job_status;

        return $this;
    }

    /**
     * Gets lang
     *
     * @return \OpenAPI\Client\Model\AuditLogServiceLang|null
     */
    public function getLang()
    {
        return $this->container['lang'];
    }

    /**
     * Sets lang
     *
     * @param \OpenAPI\Client\Model\AuditLogServiceLang|null $lang lang
     *
     * @return $this
     */
    public function setLang($lang)
    {
        $this->container['lang'] = $lang;

        return $this;
    }

    /**
     * Gets progress
     *
     * @return int|null
     */
    public function getProgress()
    {
        return $this->container['progress'];
    }

    /**
     * Sets progress
     *
     * @param int|null $progress <div lang=\"ja\"> 処理進捗です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Displays progress in integers from 1 to 100.<br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setProgress($progress)
    {
        $this->container['progress'] = $progress;

        return $this;
    }

    /**
     * Gets update_source
     *
     * @return \OpenAPI\Client\Model\AuditLogServiceUpdateSource|null
     */
    public function getUpdateSource()
    {
        return $this->container['update_source'];
    }

    /**
     * Sets update_source
     *
     * @param \OpenAPI\Client\Model\AuditLogServiceUpdateSource|null $update_source update_source
     *
     * @return $this
     */
    public function setUpdateSource($update_source)
    {
        $this->container['update_source'] = $update_source;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


